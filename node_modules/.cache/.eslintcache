[{"/home/web29/web_project/client/src/index.js":"1","/home/web29/web_project/client/src/App.js":"2","/home/web29/web_project/client/src/reportWebVitals.js":"3","/home/web29/web_project/client/src/pages/index.js":"4","/home/web29/web_project/client/src/pages/Account.js":"5","/home/web29/web_project/client/src/pages/Home.js":"6","/home/web29/web_project/client/src/pages/Main.js":"7","/home/web29/web_project/client/src/pages/Profile.js":"8","/home/web29/web_project/client/src/pages/EditPost.js":"9","/home/web29/web_project/client/src/pages/Message.js":"10","/home/web29/web_project/client/src/pages/NewPost.js":"11","/home/web29/web_project/client/src/pages/Follow.js":"12","/home/web29/web_project/client/src/components/Profile.js":"13","/home/web29/web_project/client/src/components/Message.js":"14","/home/web29/web_project/client/src/components/account/LoginSignup.js":"15","/home/web29/web_project/client/src/components/main/LoginInput.js":"16","/home/web29/web_project/client/src/components/home/Home.js":"17","/home/web29/web_project/client/src/components/post/NewPost.js":"18","/home/web29/web_project/client/src/components/follow/Follow.js":"19","/home/web29/web_project/client/src/components/post/EditPost.js":"20","/home/web29/web_project/client/src/components/main/MainPanel.js":"21","/home/web29/web_project/client/src/components/home/Header.js":"22","/home/web29/web_project/client/src/components/home/HomeContet.js":"23","/home/web29/web_project/client/src/components/follow/FollowContent.js":"24","/home/web29/web_project/client/src/Color/Color.js":"25","/home/web29/web_project/client/src/components/home/Card.js":"26"},{"size":489,"mtime":1639408080840,"results":"27","hashOfConfig":"28"},{"size":883,"mtime":1639408080840,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1639408080840,"results":"30","hashOfConfig":"28"},{"size":380,"mtime":1639408080840,"results":"31","hashOfConfig":"28"},{"size":198,"mtime":1639408080840,"results":"32","hashOfConfig":"28"},{"size":183,"mtime":1639408080840,"results":"33","hashOfConfig":"28"},{"size":262,"mtime":1639408080840,"results":"34","hashOfConfig":"28"},{"size":183,"mtime":1639408080840,"results":"35","hashOfConfig":"28"},{"size":186,"mtime":1639408080840,"results":"36","hashOfConfig":"28"},{"size":188,"mtime":1639408080840,"results":"37","hashOfConfig":"28"},{"size":180,"mtime":1639408080840,"results":"38","hashOfConfig":"28"},{"size":186,"mtime":1639408080840,"results":"39","hashOfConfig":"28"},{"size":1435,"mtime":1639408080840,"results":"40","hashOfConfig":"28"},{"size":483,"mtime":1639408080840,"results":"41","hashOfConfig":"28"},{"size":8235,"mtime":1639408080840,"results":"42","hashOfConfig":"28"},{"size":4251,"mtime":1639408080840,"results":"43","hashOfConfig":"28"},{"size":4717,"mtime":1639412274187,"results":"44","hashOfConfig":"28"},{"size":2069,"mtime":1639408080840,"results":"45","hashOfConfig":"28"},{"size":1363,"mtime":1639408080840,"results":"46","hashOfConfig":"28"},{"size":4195,"mtime":1639408080840,"results":"47","hashOfConfig":"28"},{"size":461,"mtime":1639408080840,"results":"48","hashOfConfig":"28"},{"size":1413,"mtime":1639409098883,"results":"49","hashOfConfig":"28"},{"size":717,"mtime":1639408080840,"results":"50","hashOfConfig":"28"},{"size":1344,"mtime":1639408080840,"results":"51","hashOfConfig":"28"},{"size":675,"mtime":1639408080840,"results":"52","hashOfConfig":"28"},{"size":3753,"mtime":1639414654097,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cb6e8",{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/web29/web_project/client/src/index.js",[],"/home/web29/web_project/client/src/App.js",[],"/home/web29/web_project/client/src/reportWebVitals.js",[],"/home/web29/web_project/client/src/pages/index.js",[],"/home/web29/web_project/client/src/pages/Account.js",[],"/home/web29/web_project/client/src/pages/Home.js",[],"/home/web29/web_project/client/src/pages/Main.js",[],"/home/web29/web_project/client/src/pages/Profile.js",[],"/home/web29/web_project/client/src/pages/EditPost.js",[],"/home/web29/web_project/client/src/pages/Message.js",[],"/home/web29/web_project/client/src/pages/NewPost.js",[],"/home/web29/web_project/client/src/pages/Follow.js",[],"/home/web29/web_project/client/src/components/Profile.js",["114"],"import React, { useEffect, useState } from \"react\";\nimport Cookies from \"js-cookie\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport Header from \"./home/Header\";\nimport axios from \"axios\";\n\nconst Layout = styled.div`\n  width: 100%;\n  margin-top: 50px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-size: large;\n  div {\n    margin: 20px;\n  }\n`;\nfunction Profile() {\n  const user_id = Cookies.get(\"user-id\");\n  const [follow_num, setFollowing_num] = useState({\n    following_id: 0,\n    followed_id: 0,\n  });\n\n  useEffect(() => {\n    (async () => {\n      (\"??\");\n      const following = await axios.get(\"follow/getFollowingNum\", {\n        params: { user_id: user_id },\n      });\n      const followed = await axios.get(\"follow/getFollowedNum\", {\n        params: { user_id: user_id },\n      });\n\n      setFollowing_num({\n        ...follow_num,\n        following_id: following.data,\n        followed_id: followed.data,\n      });\n    })();\n  }, []);\n\n  const nowTime = moment().format(\"YYYY-MM-DD HH:mm:ss\");\n  return (\n    <div>\n      <Header />\n      <Layout>\n        <div>사용자 id : {user_id}</div>\n        <div>현재시간 : {nowTime}</div>\n        <div>사용자가 팔로우하는 사람 수 : {follow_num?.following_id} </div>\n        <div>당신을 팔로우 해주는 사람 수 : {follow_num?.followed_id} </div>\n      </Layout>\n    </div>\n  );\n}\n\nexport default Profile;\n","/home/web29/web_project/client/src/components/Message.js",["115","116","117","118","119"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Cookies from \"js-cookie\";\nimport axios from \"axios\";\nfunction Message() {\n  const user_id = Cookies.get(\"user-id\");\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    (async () => {\n      let followRes = axios.get(\"follow/table\", {\n        params: {\n          user_id: user_id,\n        },\n      });\n    })();\n  }, []);\n\n  return <div></div>;\n}\n\nexport default Message;\n","/home/web29/web_project/client/src/components/account/LoginSignup.js",["120"],"import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useNavigate } from \"react-router-dom\";\nimport { PointColor, PrimaryColor } from \"../../Color/Color\";\nimport axios from \"axios\";\n\nconst SignupPanel = styled.div`\n  background-size: 100% 100%;\n  background-repeat: no-repeat;\n\n  @media screen and (max-width: 1024px) {\n    width: 100%;\n  }\n`;\n\nconst SingupLayout = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-top: 20px;\n  margin-bottom: 50px;\n  h1 {\n    padding-top: 30px;\n    font-size: 30px;\n    line-height: 0;\n  }\n  p {\n    font-size: 15px;\n    line-height: 20px;\n    color: gray;\n  }\n\n  @media screen and (max-width: 1024px) {\n    width: 100%;\n  }\n\n  @media screen and (max-width: 480px) {\n    h1 {\n      padding-top: 30px;\n      font-size: 45px;\n      line-height: 0;\n    }\n    p {\n      font-size: 13px;\n      line-height: 20px;\n      color: gray;\n    }\n  }\n\n  @media screen and (max-width: 400px) {\n    p {\n      font-size: 10px;\n      line-height: 20px;\n      color: gray;\n    }\n  }\n`;\n\nconst LoginButton = styled.button`\n  margin-top: 30px;\n  padding: 10px;\n  width: 554px;\n  background-color: ${PointColor};\n  color: white;\n  border-radius: 3px;\n  border: 1px solid ${PointColor};\n\n  @media screen and (max-width: 1024px) {\n    width: 80%;\n  }\n`;\n\nconst InputForm = styled.div`\n  width: 554px;\n  display: flex;\n  background: white;\n  flex-direction: column;\n  input {\n    outline: gray;\n    border: none;\n    background: none;\n  }\n  label {\n    line-height: 300%;\n  }\n  .invalidEmail {\n    color: red;\n    font-size: 8px;\n    line-height: 0;\n  }\n  .validEmail {\n    color: green;\n    font-size: 8px;\n    line-height: 0;\n  }\n  .validEmail {\n    color: green;\n    font-size: 8px;\n    line-height: 0;\n  }\n  .invalidPW {\n    color: red;\n    font-size: 8px;\n    line-height: 0;\n  }\n  .validPW {\n    color: green;\n    font-size: 8px;\n    line-height: 0;\n  }\n  .email {\n    margin-top: 1px;\n    padding-bottom: 18px;\n    padding-left: 10px;\n    font-size: 13px;\n    display: flex;\n    flex-direction: column;\n    border: 1px solid gray;\n    border-left: ${(props) =>\n      props.inputStates.email ? \"3px solid\" + PrimaryColor : \"1px solid gray\"};\n    color: gray;\n  }\n  .password {\n    padding-bottom: 18px;\n    padding-left: 10px;\n    font-size: 13px;\n    display: flex;\n    flex-direction: column;\n    border: 1px solid gray;\n    border-left: ${(props) =>\n      props.inputStates.password\n        ? \"3px solid\" + PrimaryColor\n        : \" 1px solid gray\"};\n    color: gray;\n  }\n  .confirmPassword {\n    padding-bottom: 18px;\n    padding-left: 10px;\n    font-size: 13px;\n    display: flex;\n    flex-direction: column;\n    border: 1px solid gray;\n    border-left: ${(props) =>\n      props.inputStates.confirmPassword\n        ? \"3px solid\" + PrimaryColor\n        : \"1px solid gray\"};\n    color: gray;\n  }\n  .name {\n    padding-bottom: 18px;\n    padding-left: 10px;\n    font-size: 13px;\n    display: flex;\n    flex-direction: column;\n    border: 1px solid gray;\n    border-left: ${(props) =>\n      props.inputStates.name ? \"3px solid\" + PrimaryColor : \"1px solid gray\"};\n    color: gray;\n  }\n  .id {\n    padding-bottom: 18px;\n    padding-left: 10px;\n    font-size: 13px;\n    display: flex;\n    flex-direction: column;\n    border: 1px solid gray;\n    border-left: ${(props) =>\n      props.inputStates.id ? \"3px solid\" + PrimaryColor : \"1px solid gray\"};\n    color: gray;\n  }\n\n  @media screen and (max-width: 1024px) {\n    width: 80%;\n  }\n`;\n\nfunction LoginSignup() {\n  const [isValidPW, setIsValidPW] = useState(false);\n  const [isValidEmail, setIsValidEmail] = useState(false);\n  const navigate = useNavigate();\n  const [loginState, setLoginState] = useState({\n    email: \"\",\n    password: \"\",\n    name: \"\",\n    id: \"\",\n  });\n\n  useEffect(() => {\n    let emailRule =\n      /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\n    //이메일 정규표현식\n    if (emailRule.test(loginState.email)) {\n      setIsValidEmail(true);\n    } else {\n      setIsValidEmail(false);\n    }\n\n    if (loginState.confirmPassword === loginState.password) {\n      setIsValidPW(true);\n    } else {\n      setIsValidPW(false);\n    }\n  }, [\n    loginState.password,\n    loginState.name,\n    loginState.email,\n    loginState.id,\n    loginState.confirmPassword,\n  ]);\n\n  const onChange = (e) => {\n    const { value, name } = e.target;\n    setLoginState({\n      ...loginState,\n      [name]: value,\n    });\n  };\n\n  const [inputStates, setInputStates] = useState({\n    email: false,\n    password: false,\n    confirmPassword: false,\n    name: false,\n    id: false,\n  });\n  const clickJoin = async () => {\n    const body = {\n      email: loginState.email,\n      password: loginState.password,\n      name: loginState.name,\n      id: loginState.id,\n    };\n    try {\n      let result = await axios.post(\"/signup\", body);\n      navigate(\"/\");\n    } catch (e) {\n      alert(\"이메일 또는 아이디 중복\");\n    }\n  };\n  const onClick = (inputType) => {\n    switch (inputType) {\n      case \"email\":\n        setInputStates({\n          email: true,\n        });\n        break;\n      case \"password\":\n        setInputStates({\n          password: true,\n        });\n        break;\n      case \"confirmPassword\":\n        setInputStates({\n          confirmPassword: true,\n        });\n        break;\n      case \"name\":\n        setInputStates({\n          name: true,\n        });\n        break;\n      case \"id\":\n        setInputStates({\n          id: true,\n        });\n        break;\n      default:\n    }\n  };\n\n  return (\n    <SignupPanel>\n      <SingupLayout>\n        <h1>숭실대학교 Instagram</h1>\n        <p>회원가입 신청 후 초기화면으로 이동</p>\n        <InputForm inputStates={inputStates}>\n          <label className=\"email\" onClick={() => onClick(\"email\")}>\n            이메일주소\n            <input\n              type=\"email\"\n              name=\"email\"\n              onChange={onChange}\n              onBlur={() => {\n                setInputStates({ ...inputStates, email: false });\n              }}\n            />\n            {loginState.email && (\n              <p className={isValidEmail ? \"validEmail\" : \"invalidEmail\"}>\n                {isValidEmail ? \"이메일 양식 OK\" : \"이메일 양식에 맞춰주세요\"}\n              </p>\n            )}\n          </label>\n\n          <label className=\"id\" onClick={() => onClick(\"id\")}>\n            ID\n            <input\n              type=\"text\"\n              name=\"id\"\n              onChange={onChange}\n              onBlur={() => {\n                setInputStates({ ...inputStates, id: false });\n              }}\n            />\n          </label>\n\n          <label className=\"password\" onClick={() => onClick(\"password\")}>\n            비밀번호\n            <input\n              type=\"password\"\n              name=\"password\"\n              onChange={onChange}\n              onBlur={() => {\n                setInputStates({ ...inputStates, password: false });\n              }}\n            />\n          </label>\n\n          <label\n            className=\"confirmPassword\"\n            onClick={() => onClick(\"confirmPassword\")}\n          >\n            비밀번호 확인\n            <input\n              type=\"password\"\n              name=\"confirmPassword\"\n              onChange={onChange}\n              onBlur={() => {\n                setInputStates({ ...inputStates, confirmPassword: false });\n              }}\n            />\n            {loginState.confirmPassword && (\n              <p className={isValidPW ? \"validPW\" : \"invalidPW\"}>\n                {isValidPW ? \"✅비밀번호 일치\" : \"❌불일치\"}\n              </p>\n            )}\n          </label>\n\n          <label className=\"name\" onClick={() => onClick(\"name\")}>\n            이름\n            <input\n              type=\"text\"\n              name=\"name\"\n              onChange={onChange}\n              onBlur={() => {\n                setInputStates({ ...inputStates, name: false });\n              }}\n            />\n          </label>\n        </InputForm>\n        <LoginButton onClick={clickJoin}>회원가입</LoginButton>\n      </SingupLayout>\n    </SignupPanel>\n  );\n}\n\nexport default LoginSignup;\n","/home/web29/web_project/client/src/components/main/LoginInput.js",[],"/home/web29/web_project/client/src/components/home/Home.js",["121"],"import { React, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useLocation } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport HomeContent from \"./HomeContet\";\nimport axios from \"axios\";\nimport { Pagination } from \"react-bootstrap\";\nimport QueryString from \"qs\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst SearchCheck = styled.div`\n  width: 100%;\n  margin-top: 50px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  input {\n    height: 40px;\n    width: 200px;\n    border-radius: 3px;\n  }\n  button {\n    height: 40px;\n    border-radius: 3px;\n  }\n  div {\n    height: 40px;\n  }\n`;\nconst RadioButton = styled.div`\n  width: 100%;\n  height: 30px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  label {\n    padding: 5px;\n  }\n`;\nconst PaginationLayout = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nfunction Home() {\n  const [search, setSearch] = useState({\n    text: \"\",\n    type: \"\",\n  });\n  const navigator = useNavigate();\n  const [cardList, setCardList] = useState([]);\n  const [refreshPage, setRefreshPage] = useState(false);\n  const [page, setPage] = useState(0);\n  const [totalPage, setTotalPage] = useState(0);\n\n  const location = useLocation();\n  const query = QueryString.parse(location.search, {\n    ignoreQueryPrefix: true,\n    // 문자열 맨 앞의 ?를 생력\n  });\n\n  useEffect(() => {\n    console.log('new2');\n    query?.text || query?.type\n      ? filterSearch()\n      : (async () => {\n          //get total\n          let pageRes = await axios.get(\"write/totalPage\");\n          const total = pageRes.data;\n          setTotalPage(total);\n          //data fetch get post\n          const result = await axios.get(\"write/getPost\", {\n            params: { page: page },\n          });\n\n          //images\n          const image = await axios.get(\"write/getImage\", {\n            params: { page: page },\n          });\n\n          const imageResult = result.data?.map((item) => {\n            const images = image.data?.filter(\n              (img) => img.number === item.number\n            );\n            return {\n              ...item,\n              images,\n            };\n          });\n\n          setCardList(imageResult);\n        })();\n  }, [page, refreshPage,location]);\n\n  const onRadioClick = async (e) => {\n    setSearch({\n      ...search,\n      type: e.target.value,\n    });\n  };\n\n  const onSearchTextChange = (e) => {\n    setSearch({\n      ...search,\n      text: e.target.value,\n    });\n  };\n\n  const filterSearch = async () => {\n    let pageRes = await axios.get(\"write/filterPage\", {\n      params: {\n        type: query?.type || search.type,\n        text: query?.text || search.text,\n        page: page || 0,\n      },\n    });\n    const total = pageRes.data;\n\n    setTotalPage(total);\n\n    let postRes = await axios.get(\"write/filterGetPost\", {\n      params: {\n        type: query?.type || search.type,\n        text: query?.text || search.text,\n        page: page || 0,\n      },\n    });\n    const postInfo = postRes.data;\n\n    Promise.all(\n      postInfo.map(async (item) => {\n        const imageRes = await axios(\"write/getEachImages\", {\n          params: { number: item.number },\n        });\n        return {\n          ...item,\n          images: [imageRes.data],\n        };\n      })\n    ).then((item) => setCardList(item));\n    setRefreshPage(true);\n  };\n\n  const submitClick = () => {\n    navigator(`/home?text=${search.text}&type=${search.type}`);\n  };\n\n  return (\n    <div>\n      <Header />\n      <SearchCheck>\n        <input placeholder=\"검색어\" type=\"text\" onChange={onSearchTextChange} />\n        <button type=\"submit\" onClick={submitClick}>\n          검색\n        </button>\n      </SearchCheck>\n      <RadioButton>\n        <label>\n          <input type=\"radio\" name=\"text\" value=\"id\" onClick={onRadioClick} />{\" \"}\n          작성자\n        </label>\n        <label>\n          <input type=\"radio\" name=\"text\" value=\"text\" onClick={onRadioClick} />{\" \"}\n          일반텍스트\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"text\"\n            value=\"hashtag\"\n            onClick={onRadioClick}\n          />{\" \"}\n          Hashtag\n        </label>\n      </RadioButton>\n      <HomeContent cardList={cardList} />\n      <PaginationLayout>\n        <Pagination>\n          {[...Array(totalPage).keys()].map((number) => (\n            <Pagination.Item\n              active={page === number}\n              onClick={() => setPage(number)}\n            >\n              {number + 1}\n            </Pagination.Item>\n          ))}\n        </Pagination>\n      </PaginationLayout>\n    </div>\n  );\n}\n\nexport default Home;\n","/home/web29/web_project/client/src/components/post/NewPost.js",["122","123","124","125","126"],"import React, { useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport Cookies from \"js-cookie\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst PostPanel = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  font-size: 20px;\n  text-align: center;\n  align-items: center;\n\n  .content {\n    height: 500px;\n    width: 1000px;\n  }\n`;\n\nfunction NewPost() {\n  const id = Cookies.get(\"user-id\");\n  const [image, setImage] = useState([]);\n  const navigate = useNavigate();\n  const [inputPost, setPost] = useState({\n    id: \"\",\n    date: \"\",\n    contents: \"\",\n  });\n\n  const formData = new FormData();\n\n  const handleChangeFile = async (e) => {\n    if (e.target.files.length > 5) {\n      alert(\"파일 최대 5개만 선택가능\");\n    } else {\n      for (let i = 0; i < 5; i++) {\n        formData.append(\"img\", e.target.files[i]);\n      }\n    }\n  };\n\n  const handleChangePost = (e) => {\n    let date = moment().format(\"YYYY-MM-DD HH:mm\");\n    setPost({\n      ...inputPost,\n      contents: e.target.value,\n      id: id,\n      date: date,\n    });\n  };\n\n  const subimtOnClick = async (e) => {\n    const config = {\n      header: { \"content-type\": \"multipart/form-data\" },\n    };\n    try {\n      let result = await axios.post(\"/write/uploadImages\", formData, config);\n      let result2 = await axios.post(\"/write/uploadPost\", inputPost);\n    } catch (err) {\n      alert(\"지원하지않는 파일존재\\n 다른 이미지 파일을 넣어주세요.\");\n    }\n    navigate(\"/Home\");\n  };\n\n  return (\n    <PostPanel>\n      <input\n        className=\"content\"\n        placeholder=\"내용입력\"\n        type=\"email\"\n        onChange={handleChangePost}\n      />\n      <input\n        type=\"file\"\n        className=\"file\"\n        id=\"file\"\n        name=\"img\"\n        onChange={handleChangeFile}\n        multiple=\"multiple\"\n      />\n      <button type=\"submit\" onClick={subimtOnClick}>\n        전송\n      </button>\n    </PostPanel>\n  );\n}\n\nexport default NewPost;\n","/home/web29/web_project/client/src/components/follow/Follow.js",["127"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport FollowContent from \"./FollowContent\";\nimport Header from \"../home/Header\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\n\nconst FollowWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\nfunction Follow() {\n  const [followingUserList, setFollowingUserList] = useState([]);\n  const user_id = Cookies.get(\"user-id\");\n  useEffect(() => {\n    (async () => {\n      const usersRes = await axios.get(\"follow/user\");\n      const user = usersRes.data;\n\n      const tableRes = await axios.get(\"follow/table\", {\n        params: { user_id: user_id },\n      });\n      const followList = tableRes.data;\n\n      const followingUserList = user.map((user) => {\n        let isFollowedUser = false;\n        followList.forEach((followUser) => {\n          if (followUser.followed_id === user.id) isFollowedUser = true;\n        });\n        return {\n          id: user.id,\n          following: isFollowedUser,\n        };\n      });\n      setFollowingUserList(followingUserList);\n    })();\n  }, []);\n\n  return (\n    <FollowWrapper>\n      <Header id=\"header\" />\n      {followingUserList?.map((followingUser) => (\n        <FollowContent followingUser={followingUser} />\n      ))}\n    </FollowWrapper>\n  );\n}\n\nexport default Follow;\n","/home/web29/web_project/client/src/components/post/EditPost.js",["128","129","130","131","132","133","134","135"],"import React, { useState, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport Cookies from \"js-cookie\";\nimport axios from \"axios\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { Empty } from \"antd\";\n\nconst PostPanel = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  font-size: 20px;\n  text-align: center;\n  align-items: center;\n\n  .content {\n    height: 500px;\n    width: 1000px;\n  }\n  div {\n    margin: 10px;\n  }\n  .exist {\n    border: none;\n    background-color: 0;\n    margin: 5px;\n  }\n`;\n\nfunction EditPost() {\n  const location = useLocation();\n  const id = location.state.id;\n  const [imageFilenames, setImage] = useState([]);\n  const navigate = useNavigate();\n  const images = [];\n  const num = location.state.number;\n  const [fileLength, setLength] = useState(0);\n  const [inputPost, setPost] = useState({\n    number: \"\",\n    id: \"\",\n    date: \"\",\n    contents: \"\",\n  });\n\n  useEffect(() => {\n    (async () => {\n      const temp = location.state.images;\n      for (let i in temp[0]) {\n        if (temp[0][i] !== null) {\n          if (i !== \"number\") images.push(temp[0][i]);\n        }\n        setImage(images);\n      }\n\n      setPost({\n        ...inputPost,\n        number: location.state.number,\n        id: location.state.id,\n        contents: location.state.contents,\n      });\n    })();\n  }, []);\n\n  const formData = new FormData();\n\n  const existFileClick = async (e) => {\n    let idx = e.target.id;\n    document.getElementById(idx).style.display = \"none\";\n    delete imageFilenames[idx];\n    let filtered = imageFilenames.filter(function (el) {\n      return el != null;\n    });\n    setImage(filtered);\n    setLength(filtered.length);\n  };\n  const handleChangeFile = async (e) => {\n    if (e.target.files.length > 5 - imageFilenames.length) {\n      alert(\"파일 최대 5개만 선택가능 다시 선택하세요.\");\n    } else {\n      for (let i = 0; i < 5; i++) {\n        formData.append(\"img\", e.target.files[i]);\n      }\n    }\n  };\n\n  const handleChangePost = (e) => {\n    let date = moment().format(\"YYYY-MM-DD HH:mm\");\n    setPost({\n      ...inputPost,\n      contents: e.target.value,\n      id: id,\n      date: date,\n    });\n  };\n\n  const subimtOnClick = async (e) => {\n    const config = {\n      header: { \"content-type\": \"multipart/form-data\" },\n    };\n    try {\n      let result2 = await axios.post(\"/write/updatePost\", inputPost);\n      formData.append(\"f1\", imageFilenames[0]);\n      formData.append(\"f2\", imageFilenames[1]);\n      formData.append(\"f3\", imageFilenames[2]);\n      formData.append(\"f4\", imageFilenames[3]);\n      formData.append(\"f5\", imageFilenames[4]);\n      formData.append(\"num\", num);\n      formData.append(\"fileLength\", imageFilenames.length);\n      // let result = await axios.post(\"/write/updateImages\", formData, config);\n      // console.log(result.data);\n    } catch (err) {\n      // alert(\"지원하지않는 파일존재\\n 다른 이미지 파일을 넣어주세요.\");\n      alert(err);\n    }\n    navigate(\"/home\");\n  };\n\n  const deleteOnClick = async () => {\n    try {\n      let result = await axios.post(\"/write/deletePost\", inputPost);\n      navigate(\"/home\");\n    } catch {}\n  };\n\n  return (\n    <PostPanel>\n      <input\n        className=\"content\"\n        placeholder=\"내용입력\"\n        type=\"email\"\n        value={inputPost.contents}\n        onChange={handleChangePost}\n      />\n      <input\n        type=\"file\"\n        className=\"file\"\n        id=\"file\"\n        name=\"img\"\n        onChange={handleChangeFile}\n        multiple=\"multiple\"\n      />\n      <div>\n        <div>존재하는 파일이름 클릭 시 삭제됨</div>\n        현재 존재하는파일\n        {imageFilenames.map((fname, idx) => (\n          <button\n            className=\"exist\"\n            key={fname}\n            id={idx}\n            onClick={existFileClick}\n          >\n            {fname}\n          </button>\n        ))}\n      </div>\n\n      <button type=\"submit\" onClick={subimtOnClick}>\n        수정\n      </button>\n      <button onClick={deleteOnClick}>게시물 삭제</button>\n    </PostPanel>\n  );\n}\n\nexport default EditPost;\n","/home/web29/web_project/client/src/components/main/MainPanel.js",[],"/home/web29/web_project/client/src/components/home/Header.js",[],"/home/web29/web_project/client/src/components/home/HomeContet.js",[],"/home/web29/web_project/client/src/components/follow/FollowContent.js",["136","137","138"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Cookies from \"js-cookie\";\nimport axios from \"axios\";\n\nconst FollowWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  div {\n    margin: 20px;\n  }\n  button {\n    background-color: antiquewhite;\n  }\n`;\nfunction Follow({ followingUser }) {\n  const following_id = Cookies.get(\"user-id\");\n  const [isFollowing, setIsFollowing] = useState(followingUser?.following);\n  const [updateFollow, setUpdateFollow] = useState({\n    following_id: following_id,\n    followed_id: followingUser.id,\n    state: isFollowing,\n  });\n  useEffect(() => {\n    setUpdateFollow({\n      ...updateFollow,\n      state: isFollowing,\n    });\n  }, [isFollowing]);\n\n  const followButtonCilck = async () => {\n    if (isFollowing) {\n      setIsFollowing(false);\n      let result = await axios.post(\"/follow/update\", updateFollow);\n    } else {\n      setIsFollowing(true);\n      let result = await axios.post(\"/follow/update\", updateFollow);\n    }\n  };\n\n  return (\n    <FollowWrapper>\n      <div>아이디: {followingUser?.id}</div>\n      <button onClick={followButtonCilck}>\n        {isFollowing ? \"follow\" : \"unfollow\"}\n      </button>\n    </FollowWrapper>\n  );\n}\n\nexport default Follow;\n","/home/web29/web_project/client/src/Color/Color.js",[],"/home/web29/web_project/client/src/components/home/Card.js",["139","140","141","142"],{"ruleId":"143","severity":1,"message":"144","line":42,"column":6,"nodeType":"145","endLine":42,"endColumn":8,"suggestions":"146"},{"ruleId":"147","severity":1,"message":"148","line":2,"column":8,"nodeType":"149","messageId":"150","endLine":2,"endColumn":14},{"ruleId":"147","severity":1,"message":"151","line":7,"column":10,"nodeType":"149","messageId":"150","endLine":7,"endColumn":15},{"ruleId":"147","severity":1,"message":"152","line":7,"column":17,"nodeType":"149","messageId":"150","endLine":7,"endColumn":25},{"ruleId":"147","severity":1,"message":"153","line":10,"column":11,"nodeType":"149","messageId":"150","endLine":10,"endColumn":20},{"ruleId":"143","severity":1,"message":"154","line":16,"column":6,"nodeType":"145","endLine":16,"endColumn":8,"suggestions":"155"},{"ruleId":"147","severity":1,"message":"156","line":234,"column":11,"nodeType":"149","messageId":"150","endLine":234,"endColumn":17},{"ruleId":"143","severity":1,"message":"157","line":94,"column":6,"nodeType":"145","endLine":94,"endColumn":34,"suggestions":"158"},{"ruleId":"147","severity":1,"message":"159","line":1,"column":27,"nodeType":"149","messageId":"150","endLine":1,"endColumn":33},{"ruleId":"147","severity":1,"message":"160","line":25,"column":10,"nodeType":"149","messageId":"150","endLine":25,"endColumn":15},{"ruleId":"147","severity":1,"message":"161","line":25,"column":17,"nodeType":"149","messageId":"150","endLine":25,"endColumn":25},{"ruleId":"147","severity":1,"message":"156","line":60,"column":11,"nodeType":"149","messageId":"150","endLine":60,"endColumn":17},{"ruleId":"147","severity":1,"message":"162","line":61,"column":11,"nodeType":"149","messageId":"150","endLine":61,"endColumn":18},{"ruleId":"143","severity":1,"message":"154","line":39,"column":6,"nodeType":"145","endLine":39,"endColumn":8,"suggestions":"163"},{"ruleId":"147","severity":1,"message":"159","line":1,"column":27,"nodeType":"149","messageId":"150","endLine":1,"endColumn":33},{"ruleId":"147","severity":1,"message":"164","line":4,"column":8,"nodeType":"149","messageId":"150","endLine":4,"endColumn":15},{"ruleId":"147","severity":1,"message":"165","line":7,"column":10,"nodeType":"149","messageId":"150","endLine":7,"endColumn":15},{"ruleId":"147","severity":1,"message":"166","line":39,"column":10,"nodeType":"149","messageId":"150","endLine":39,"endColumn":20},{"ruleId":"143","severity":1,"message":"167","line":64,"column":6,"nodeType":"145","endLine":64,"endColumn":8,"suggestions":"168"},{"ruleId":"147","severity":1,"message":"169","line":99,"column":11,"nodeType":"149","messageId":"150","endLine":99,"endColumn":17},{"ruleId":"147","severity":1,"message":"162","line":103,"column":11,"nodeType":"149","messageId":"150","endLine":103,"endColumn":18},{"ruleId":"147","severity":1,"message":"156","line":122,"column":11,"nodeType":"149","messageId":"150","endLine":122,"endColumn":17},{"ruleId":"143","severity":1,"message":"170","line":33,"column":6,"nodeType":"145","endLine":33,"endColumn":19,"suggestions":"171"},{"ruleId":"147","severity":1,"message":"156","line":38,"column":11,"nodeType":"149","messageId":"150","endLine":38,"endColumn":17},{"ruleId":"147","severity":1,"message":"156","line":41,"column":11,"nodeType":"149","messageId":"150","endLine":41,"endColumn":17},{"ruleId":"147","severity":1,"message":"172","line":4,"column":8,"nodeType":"149","messageId":"150","endLine":4,"endColumn":15},{"ruleId":"147","severity":1,"message":"173","line":5,"column":8,"nodeType":"149","messageId":"150","endLine":5,"endColumn":16},{"ruleId":"147","severity":1,"message":"174","line":6,"column":8,"nodeType":"149","messageId":"150","endLine":6,"endColumn":13},{"ruleId":"143","severity":1,"message":"175","line":82,"column":6,"nodeType":"145","endLine":82,"endColumn":14,"suggestions":"176"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'follow_num' and 'user_id'. Either include them or remove the dependency array. You can also do a functional update 'setFollowing_num(f => ...)' if you only need 'follow_num' in the 'setFollowing_num' call.","ArrayExpression",["177"],"no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","'users' is assigned a value but never used.","'setUsers' is assigned a value but never used.","'followRes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user_id'. Either include it or remove the dependency array.",["178"],"'result' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'filterSearch', 'query?.text', and 'query?.type'. Either include them or remove the dependency array.",["179"],"'useRef' is defined but never used.","'image' is assigned a value but never used.","'setImage' is assigned a value but never used.","'result2' is assigned a value but never used.",["180"],"'Cookies' is defined but never used.","'Empty' is defined but never used.","'fileLength' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'images', 'inputPost', 'location.state.contents', 'location.state.id', 'location.state.images', and 'location.state.number'. Either include them or remove the dependency array. You can also do a functional update 'setPost(i => ...)' if you only need 'inputPost' in the 'setPost' call.",["181"],"'config' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'updateFollow'. Either include it or remove the dependency array. You can also do a functional update 'setUpdateFollow(u => ...)' if you only need 'updateFollow' in the 'setUpdateFollow' call.",["182"],"'leftImg' is defined but never used.","'rightImg' is defined but never used.","'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'images'. Either include it or remove the dependency array.",["183"],{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"186","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},"Update the dependencies array to be: [follow_num, user_id]",{"range":"197","text":"198"},"Update the dependencies array to be: [user_id]",{"range":"199","text":"200"},"Update the dependencies array to be: [page, refreshPage, location, query?.text, query?.type, filterSearch]",{"range":"201","text":"202"},{"range":"203","text":"200"},"Update the dependencies array to be: [images, inputPost, location.state.contents, location.state.id, location.state.images, location.state.number]",{"range":"204","text":"205"},"Update the dependencies array to be: [isFollowing, updateFollow]",{"range":"206","text":"207"},"Update the dependencies array to be: [images, number]",{"range":"208","text":"209"},[993,995],"[follow_num, user_id]",[428,430],"[user_id]",[2269,2297],"[page, refreshPage, location, query?.text, query?.type, filterSearch]",[1128,1130],[1424,1426],"[images, inputPost, location.state.contents, location.state.id, location.state.images, location.state.number]",[806,819],"[isFollowing, updateFollow]",[1674,1682],"[images, number]"]