{"ast":null,"code":"var _jsxFileName = \"/Users/anjonghun/Desktop/4\\u1112\\u1161\\u11A8\\u1102\\u1167\\u11AB 2\\u1112\\u1161\\u11A8\\u1100\\u1175/\\u110B\\u1170\\u11B8\\u1111\\u1173\\u11AF\\u1106\\u1175\\u11BC/final_project/client/src/components/home/Home.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useLocation } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport HomeContent from \"./HomeContet\";\nimport axios from \"axios\";\nimport { Pagination } from \"react-bootstrap\";\nimport QueryString from \"qs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchCheck = styled.div`\n  width: 100%;\n  margin-top: 50px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  input {\n    height: 40px;\n    width: 200px;\n    border-radius: 3px;\n  }\n  button {\n    height: 40px;\n    border-radius: 3px;\n  }\n  div {\n    height: 40px;\n  }\n`;\n_c = SearchCheck;\nconst RadioButton = styled.div`\n  width: 100%;\n  height: 30px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  label {\n    padding: 5px;\n  }\n`;\n_c2 = RadioButton;\nconst PaginationLayout = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n_c3 = PaginationLayout;\n\nfunction Home() {\n  _s();\n\n  const [search, setSearch] = useState({\n    text: \"\",\n    type: \"\"\n  });\n  const [cardList, setCardList] = useState([]);\n  const [refreshPage, setRefreshPage] = useState(false);\n  const [page, setPage] = useState(0);\n  const [totalPage, setTotalPage] = useState(0);\n  const location = useLocation();\n  const query = QueryString.parse(location.search, {\n    ignoreQueryPrefix: true // 문자열 맨 앞의 ?를 생력\n\n  });\n  useEffect(() => {\n    (query === null || query === void 0 ? void 0 : query.text) || (query === null || query === void 0 ? void 0 : query.type) ? filterSearch() : (async () => {\n      var _result$data;\n\n      //get total\n      let pageRes = await axios.get(\"write/totalPage\");\n      const total = pageRes.data;\n      setTotalPage(total); //data fetch get post\n\n      const result = await axios.get(\"write/getPost\", {\n        params: {\n          page: page\n        }\n      }); //images\n\n      const image = await axios.get(\"write/getImage\", {\n        params: {\n          page: page\n        }\n      });\n      const imageResult = (_result$data = result.data) === null || _result$data === void 0 ? void 0 : _result$data.map(item => {\n        var _image$data;\n\n        const images = (_image$data = image.data) === null || _image$data === void 0 ? void 0 : _image$data.filter(img => img.number === item.number);\n        return { ...item,\n          images\n        };\n      });\n      setCardList(imageResult);\n    })();\n  }, [page, refreshPage, location]);\n\n  const onRadioClick = async e => {\n    setSearch({ ...search,\n      type: e.target.value\n    });\n  };\n\n  const onSearchTextChange = e => {\n    setSearch({ ...search,\n      text: e.target.value\n    });\n  };\n\n  const filterSearch = async () => {\n    let pageRes = await axios.get(\"write/filterPage\", {\n      params: {\n        type: (query === null || query === void 0 ? void 0 : query.type) || search.type,\n        text: (query === null || query === void 0 ? void 0 : query.text) || search.text,\n        page: page || 0\n      }\n    });\n    const total = pageRes.data;\n    setTotalPage(total);\n    let postRes = await axios.get(\"write/filterGetPost\", {\n      params: {\n        type: (query === null || query === void 0 ? void 0 : query.type) || search.type,\n        text: (query === null || query === void 0 ? void 0 : query.text) || search.text,\n        page: page || 0\n      }\n    });\n    const postInfo = postRes.data;\n    Promise.all(postInfo.map(async item => {\n      const imageRes = await axios(\"write/getEachImages\", {\n        params: {\n          number: item.number\n        }\n      });\n      return { ...item,\n        images: [imageRes.data]\n      };\n    })).then(item => setCardList(item));\n    setRefreshPage(true);\n  };\n\n  const submitClick = () => {\n    navigator(`/home?text=${search.text}&type=${search.type}`, {\n      replace: true\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchCheck, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\uAC80\\uC0C9\\uC5B4\",\n        type: \"text\",\n        onChange: onSearchTextChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: submitClick,\n        children: \"\\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RadioButton, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"text\",\n          value: \"id\",\n          onClick: onRadioClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), \" \", \"\\uC791\\uC131\\uC790\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"text\",\n          value: \"text\",\n          onClick: onRadioClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), \" \", \"\\uC77C\\uBC18\\uD14D\\uC2A4\\uD2B8\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"text\",\n          value: \"hashtag\",\n          onClick: onRadioClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), \" \", \"Hashtag\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HomeContent, {\n      cardList: cardList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PaginationLayout, {\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        children: [...Array(totalPage).keys()].map(number => /*#__PURE__*/_jsxDEV(Pagination.Item, {\n          active: page === number,\n          onClick: () => setPage(number),\n          children: number + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"SJI1FsjsH36cVWnxluZ2b68RGZY=\", false, function () {\n  return [useLocation];\n});\n\n_c4 = Home;\nexport default Home;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"SearchCheck\");\n$RefreshReg$(_c2, \"RadioButton\");\n$RefreshReg$(_c3, \"PaginationLayout\");\n$RefreshReg$(_c4, \"Home\");","map":{"version":3,"sources":["/Users/anjonghun/Desktop/4학년 2학기/웹플밍/final_project/client/src/components/home/Home.js"],"names":["React","useEffect","useState","styled","useLocation","Header","HomeContent","axios","Pagination","QueryString","SearchCheck","div","RadioButton","PaginationLayout","Home","search","setSearch","text","type","cardList","setCardList","refreshPage","setRefreshPage","page","setPage","totalPage","setTotalPage","location","query","parse","ignoreQueryPrefix","filterSearch","pageRes","get","total","data","result","params","image","imageResult","map","item","images","filter","img","number","onRadioClick","e","target","value","onSearchTextChange","postRes","postInfo","Promise","all","imageRes","then","submitClick","navigator","replace","Array","keys"],"mappings":"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","sourcesContent":["import { React, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useLocation } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport HomeContent from \"./HomeContet\";\nimport axios from \"axios\";\nimport { Pagination } from \"react-bootstrap\";\nimport QueryString from \"qs\";\n\nconst SearchCheck = styled.div`\n  width: 100%;\n  margin-top: 50px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  input {\n    height: 40px;\n    width: 200px;\n    border-radius: 3px;\n  }\n  button {\n    height: 40px;\n    border-radius: 3px;\n  }\n  div {\n    height: 40px;\n  }\n`;\nconst RadioButton = styled.div`\n  width: 100%;\n  height: 30px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  label {\n    padding: 5px;\n  }\n`;\nconst PaginationLayout = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nfunction Home() {\n  const [search, setSearch] = useState({\n    text: \"\",\n    type: \"\",\n  });\n  const [cardList, setCardList] = useState([]);\n  const [refreshPage, setRefreshPage] = useState(false);\n  const [page, setPage] = useState(0);\n  const [totalPage, setTotalPage] = useState(0);\n\n  const location = useLocation();\n  const query = QueryString.parse(location.search, {\n    ignoreQueryPrefix: true,\n    // 문자열 맨 앞의 ?를 생력\n  });\n\n  useEffect(() => {\n    query?.text || query?.type\n      ? filterSearch()\n      : (async () => {\n          //get total\n          let pageRes = await axios.get(\"write/totalPage\");\n          const total = pageRes.data;\n          setTotalPage(total);\n          //data fetch get post\n          const result = await axios.get(\"write/getPost\", {\n            params: { page: page },\n          });\n\n          //images\n          const image = await axios.get(\"write/getImage\", {\n            params: { page: page },\n          });\n\n          const imageResult = result.data?.map((item) => {\n            const images = image.data?.filter(\n              (img) => img.number === item.number\n            );\n            return {\n              ...item,\n              images,\n            };\n          });\n\n          setCardList(imageResult);\n        })();\n  }, [page, refreshPage, location]);\n\n  const onRadioClick = async (e) => {\n    setSearch({\n      ...search,\n      type: e.target.value,\n    });\n  };\n\n  const onSearchTextChange = (e) => {\n    setSearch({\n      ...search,\n      text: e.target.value,\n    });\n  };\n\n  const filterSearch = async () => {\n    let pageRes = await axios.get(\"write/filterPage\", {\n      params: {\n        type: query?.type || search.type,\n        text: query?.text || search.text,\n        page: page || 0,\n      },\n    });\n    const total = pageRes.data;\n\n    setTotalPage(total);\n\n    let postRes = await axios.get(\"write/filterGetPost\", {\n      params: {\n        type: query?.type || search.type,\n        text: query?.text || search.text,\n        page: page || 0,\n      },\n    });\n    const postInfo = postRes.data;\n\n    Promise.all(\n      postInfo.map(async (item) => {\n        const imageRes = await axios(\"write/getEachImages\", {\n          params: { number: item.number },\n        });\n        return {\n          ...item,\n          images: [imageRes.data],\n        };\n      })\n    ).then((item) => setCardList(item));\n    setRefreshPage(true);\n  };\n\n  const submitClick = () => {\n    navigator(`/home?text=${search.text}&type=${search.type}`, {\n      replace: true,\n    });\n  };\n\n  return (\n    <div>\n      <Header />\n      <SearchCheck>\n        <input placeholder=\"검색어\" type=\"text\" onChange={onSearchTextChange} />\n        <button type=\"submit\" onClick={submitClick}>\n          검색\n        </button>\n      </SearchCheck>\n      <RadioButton>\n        <label>\n          <input type=\"radio\" name=\"text\" value=\"id\" onClick={onRadioClick} />{\" \"}\n          작성자\n        </label>\n        <label>\n          <input type=\"radio\" name=\"text\" value=\"text\" onClick={onRadioClick} />{\" \"}\n          일반텍스트\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"text\"\n            value=\"hashtag\"\n            onClick={onRadioClick}\n          />{\" \"}\n          Hashtag\n        </label>\n      </RadioButton>\n      <HomeContent cardList={cardList} />\n      <PaginationLayout>\n        <Pagination>\n          {[...Array(totalPage).keys()].map((number) => (\n            <Pagination.Item\n              active={page === number}\n              onClick={() => setPage(number)}\n            >\n              {number + 1}\n            </Pagination.Item>\n          ))}\n        </Pagination>\n      </PaginationLayout>\n    </div>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}