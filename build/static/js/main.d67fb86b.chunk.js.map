{"version":3,"sources":["img/instagram.jpeg","components/main/MainPanel.js","Color/Color.js","components/main/LoginInput.js","pages/Main.js","components/account/LoginSignup.js","pages/Account.js","components/home/Header.js","components/home/Card.js","components/home/HomeContet.js","components/home/Home.js","pages/Home.js","components/Profile.js","pages/Profile.js","components/post/EditPost.js","pages/EditPost.js","components/post/NewPost.js","pages/NewPost.js","components/follow/FollowContent.js","components/follow/Follow.js","pages/Follow.js","components/Message.js","pages/Message.js","App.js","reportWebVitals.js","index.js"],"names":["Panel","styled","div","MainPanel","src","mainImage","alt","PointColor","LoginPanel","LoginInputPanel","SignupButton","button","LoginButton","InputForm","props","emailState","passwordState","LoginInput","useState","setEmailState","setPasswordState","emailRef","useRef","passwordRef","navigate","useNavigate","email","password","form","setForm","onChangeFormData","e","target","value","type","callLogin","a","axios","get","params","result","id","data","user","Cookies","set","alert","onClick","inputType","current","focus","className","name","onChange","ref","Main","SignupPanel","SingupLayout","inputStates","confirmPassword","LoginSignup","isValidPW","setIsValidPW","isValidEmail","setIsValidEmail","loginState","setLoginState","useEffect","test","setInputStates","clickJoin","body","post","onBlur","Signup","HeaderPanel","Header","ClickLogout","remove","Button","variant","window","location","replace","HashLayout","CardWrapper","ImageSlide","SlideBtnLayout","Card","number","images","author","date","text","hashtag","split","imgArr","setImgArr","navigator","tempImages","i","push","hashtagArr","filter","str","includes","contents","join","imgSlideClick","imgNum","document","getElementById","Number","img1","height","width","map","idx","authorClick","slice","hashtagClick","state","GridLayout","HomeContet","cardList","card","postInfo","SearchCheck","RadioButton","PaginationLayout","Home","search","setSearch","setCardList","refreshPage","setRefreshPage","page","setPage","totalPage","setTotalPage","useLocation","query","QueryString","parse","ignoreQueryPrefix","filterSearch","pageRes","total","image","imageResult","item","img","onRadioClick","postRes","Promise","all","imageRes","then","placeholder","Pagination","Array","keys","Item","active","Layout","Profile","user_id","following_id","followed_id","follow_num","setFollowing_num","following","followed","nowTime","moment","format","PostPanel","EditPost","imageFilenames","setImage","num","setLength","inputPost","setPost","temp","formData","FormData","existFileClick","style","display","filtered","el","length","handleChangeFile","files","append","subimtOnClick","header","deleteOnClick","multiple","fname","PostEdit","NewPost","config","PostNew","FollowWrapper","Follow","followingUser","isFollowing","setIsFollowing","updateFollow","setUpdateFollow","followButtonCilck","followingUserList","setFollowingUserList","usersRes","tableRes","followList","isFollowedUser","forEach","followUser","FollowContent","FollowPage","Message","MessagePage","App","path","element","Account","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d67fb86b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/instagram.56e41213.jpeg\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport mainImage from \"../../img/instagram.jpeg\";\nconst Panel = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  font-size: 20px;\n  text-align: center;\n  align-items: center;\n`;\nfunction MainPanel() {\n  return (\n    <Panel>\n      <img src={mainImage} alt=\"mainImage\" />\n      숭실대학교 인스타그램\n    </Panel>\n  );\n}\n\nexport default MainPanel;\n","export const PrimaryColor = \"#2BA8E0\"; //main color\nexport const PrimaryColor2 = \"#96D1EC\";\nexport const PrimaryColor3 = \"#C0DAE5\";\n\nexport const PointColor = \"#FFC46B\"; //emphasis color\nexport const PointColor2 = \"#FFD9A0\";\n\nexport const BlackColor = \"#18191F\"; //default color\nexport const lightBlackColor = \"#474A57\";\nexport const grayColor = \"#969BAB\";\nexport const lightgrayColor1 = \"#D9DBE1\";\nexport const lightgrayColor2 = \"#EEEFF4\";\nexport const lightgrayColor3 = \"#F4F5F7\";\nexport const lightgrayColor4 = \"#F2F2F2\";\nexport const lightgrayColor5 = \"#FAFAFA\";\n// 유사한 색깔 컬러는 번호로 설정 1->3 순으로  밝은순\n\nexport const whiteColor = \"#fff\";\n","import React, { useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { PointColor, PrimaryColor } from \"../../Color/Color\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\n// 대문자\n\nconst LoginPanel = styled.div`\n  width: 100%;\n  display: flex;\n  padding-top: 100px;\n  padding-bottom: 80px;\n  align-items: center;\n  flex-direction: column;\n  @media screen and (max-width: 1145px) {\n    height: 559px;\n  }\n`;\n\nconst LoginInputPanel = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 70px;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-family: \"YonnGodic340\";\n\n  @media screen and (max-width: 1145px) {\n    width: 100vw;\n  }\n`;\n\nconst SignupButton = styled.button`\n  margin-top: 10px;\n  padding: 10px;\n  width: 400px;\n  background-color: ${PointColor};\n  font-family: \"YonnGodic340\";\n  color: white;\n  border-radius: 3px;\n  border: 1px solid ${PointColor};\n\n  @media screen and (max-width: 1145px) {\n    width: 100%;\n  }\n`;\n\nconst LoginButton = styled.button`\n  margin-top: 10px;\n  padding: 10px;\n  width: 400px;\n  background-color: ${PointColor};\n  font-family: \"YonnGodic340\";\n  color: white;\n  border-radius: 3px;\n  border: 1px solid ${PointColor};\n\n  @media screen and (max-width: 1145px) {\n    width: 100%;\n  }\n`;\n\nconst InputForm = styled.div`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  input {\n    outline: none;\n    border: none;\n  }\n  .email {\n    margin-top: 1px;\n    padding-bottom: 10px;\n    padding-left: 10px;\n    font-size: 13px;\n    display: flex;\n    flex-direction: column;\n    border: 1px solid black;\n    border-left: ${(props) =>\n      props.emailState ? \"3px solid\" + PrimaryColor : \"1px solid black\"};\n    color: gray;\n  }\n  .password {\n    margin-top: 1px;\n    padding-bottom: 10px;\n    padding-left: 10px;\n    font-size: 13px;\n    display: flex;\n    flex-direction: column;\n    border: 1px solid black;\n    border-left: ${(props) =>\n      props.passwordState ? \"3px solid\" + PrimaryColor : \" 1px solid black\"};\n    color: gray;\n  }\n\n  @media screen and (max-width: 1145px) {\n    width: 100%;\n  }\n`;\nfunction LoginInput() {\n  const [emailState, setEmailState] = useState(false);\n  const [passwordState, setPasswordState] = useState(false);\n  const emailRef = useRef(null);\n  const passwordRef = useRef(null);\n\n  const navigate = useNavigate();\n\n  const [form, setForm] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const onChangeFormData = (e) => {\n    const { value, type } = e.target;\n    setForm({\n      ...form,\n      [type]: value,\n    });\n  };\n\n  const callLogin = async (e) => {\n    try {\n      const result = await axios.get(\"/login\", {\n        params: form,\n      });\n      const { id } = result.data.user;\n      Cookies.set(\"user-id\", id);\n\n      navigate(\"/home\");\n    } catch (err) {\n      alert(\"등록된 회원이 없습니다.\");\n    }\n  };\n\n  const callSignUpPage = (e) => {\n    navigate(\"/account\");\n  };\n\n  const onClick = (inputType) => {\n    if (inputType === \"email\") {\n      emailRef.current.focus();\n      setEmailState(true);\n      setPasswordState(false);\n    } else if (inputType === \"password\") {\n      passwordRef.current.focus();\n      setEmailState(false);\n      setPasswordState(true);\n    }\n  };\n  return (\n    <LoginPanel>\n      <LoginInputPanel>\n        <InputForm emailState={emailState} passwordState={passwordState}>\n          <div className=\"email\" onClick={() => onClick(\"email\")}>\n            이메일주소\n            <input\n              type=\"email\"\n              name=\"email\"\n              onChange={onChangeFormData}\n              ref={emailRef}\n            />\n          </div>\n          <div className=\"password\" onClick={() => onClick(\"password\")}>\n            비밀번호\n            <input\n              type=\"password\"\n              name=\"password\"\n              onChange={onChangeFormData}\n              ref={passwordRef}\n            />\n          </div>\n        </InputForm>\n\n        <LoginButton onClick={callLogin}>로그인</LoginButton>\n        <SignupButton onClick={callSignUpPage}>사용자 등록</SignupButton>\n      </LoginInputPanel>\n    </LoginPanel>\n  );\n}\n\nexport default LoginInput;\n","import React from \"react\";\nimport MainPanel from \"../components/main/MainPanel\";\nimport LoginInput from \"../components/main/LoginInput\";\n\nconst Main = () => {\n  return (\n    <div>\n      <MainPanel />\n      <LoginInput />\n    </div>\n  );\n};\n\nexport default Main;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useNavigate } from \"react-router-dom\";\nimport { PointColor, PrimaryColor } from \"../../Color/Color\";\nimport axios from \"axios\";\n\nconst SignupPanel = styled.div`\n  background-size: 100% 100%;\n  background-repeat: no-repeat;\n\n  @media screen and (max-width: 1024px) {\n    width: 100%;\n  }\n`;\n\nconst SingupLayout = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-top: 20px;\n  margin-bottom: 50px;\n  h1 {\n    padding-top: 30px;\n    font-size: 30px;\n    line-height: 0;\n  }\n  p {\n    font-size: 15px;\n    line-height: 20px;\n    color: gray;\n  }\n\n  @media screen and (max-width: 1024px) {\n    width: 100%;\n  }\n\n  @media screen and (max-width: 480px) {\n    h1 {\n      padding-top: 30px;\n      font-size: 45px;\n      line-height: 0;\n    }\n    p {\n      font-size: 13px;\n      line-height: 20px;\n      color: gray;\n    }\n  }\n\n  @media screen and (max-width: 400px) {\n    p {\n      font-size: 10px;\n      line-height: 20px;\n      color: gray;\n    }\n  }\n`;\n\nconst LoginButton = styled.button`\n  margin-top: 30px;\n  padding: 10px;\n  width: 554px;\n  background-color: ${PointColor};\n  color: white;\n  border-radius: 3px;\n  border: 1px solid ${PointColor};\n\n  @media screen and (max-width: 1024px) {\n    width: 80%;\n  }\n`;\n\nconst InputForm = styled.div`\n  width: 554px;\n  display: flex;\n  background: white;\n  flex-direction: column;\n  input {\n    outline: gray;\n    border: none;\n    background: none;\n  }\n  label {\n    line-height: 300%;\n  }\n  .invalidEmail {\n    color: red;\n    font-size: 8px;\n    line-height: 0;\n  }\n  .validEmail {\n    color: green;\n    font-size: 8px;\n    line-height: 0;\n  }\n  .validEmail {\n    color: green;\n    font-size: 8px;\n    line-height: 0;\n  }\n  .invalidPW {\n    color: red;\n    font-size: 8px;\n    line-height: 0;\n  }\n  .validPW {\n    color: green;\n    font-size: 8px;\n    line-height: 0;\n  }\n  .email {\n    margin-top: 1px;\n    padding-bottom: 18px;\n    padding-left: 10px;\n    font-size: 13px;\n    display: flex;\n    flex-direction: column;\n    border: 1px solid gray;\n    border-left: ${(props) =>\n      props.inputStates.email ? \"3px solid\" + PrimaryColor : \"1px solid gray\"};\n    color: gray;\n  }\n  .password {\n    padding-bottom: 18px;\n    padding-left: 10px;\n    font-size: 13px;\n    display: flex;\n    flex-direction: column;\n    border: 1px solid gray;\n    border-left: ${(props) =>\n      props.inputStates.password\n        ? \"3px solid\" + PrimaryColor\n        : \" 1px solid gray\"};\n    color: gray;\n  }\n  .confirmPassword {\n    padding-bottom: 18px;\n    padding-left: 10px;\n    font-size: 13px;\n    display: flex;\n    flex-direction: column;\n    border: 1px solid gray;\n    border-left: ${(props) =>\n      props.inputStates.confirmPassword\n        ? \"3px solid\" + PrimaryColor\n        : \"1px solid gray\"};\n    color: gray;\n  }\n  .name {\n    padding-bottom: 18px;\n    padding-left: 10px;\n    font-size: 13px;\n    display: flex;\n    flex-direction: column;\n    border: 1px solid gray;\n    border-left: ${(props) =>\n      props.inputStates.name ? \"3px solid\" + PrimaryColor : \"1px solid gray\"};\n    color: gray;\n  }\n  .id {\n    padding-bottom: 18px;\n    padding-left: 10px;\n    font-size: 13px;\n    display: flex;\n    flex-direction: column;\n    border: 1px solid gray;\n    border-left: ${(props) =>\n      props.inputStates.id ? \"3px solid\" + PrimaryColor : \"1px solid gray\"};\n    color: gray;\n  }\n\n  @media screen and (max-width: 1024px) {\n    width: 80%;\n  }\n`;\n\nfunction LoginSignup() {\n  const [isValidPW, setIsValidPW] = useState(false);\n  const [isValidEmail, setIsValidEmail] = useState(false);\n  const navigate = useNavigate();\n  const [loginState, setLoginState] = useState({\n    email: \"\",\n    password: \"\",\n    name: \"\",\n    id: \"\",\n  });\n\n  useEffect(() => {\n    let emailRule =\n      /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\n    //이메일 정규표현식\n    if (emailRule.test(loginState.email)) {\n      setIsValidEmail(true);\n    } else {\n      setIsValidEmail(false);\n    }\n\n    if (loginState.confirmPassword === loginState.password) {\n      setIsValidPW(true);\n    } else {\n      setIsValidPW(false);\n    }\n  }, [\n    loginState.password,\n    loginState.name,\n    loginState.email,\n    loginState.id,\n    loginState.confirmPassword,\n  ]);\n\n  const onChange = (e) => {\n    const { value, name } = e.target;\n    setLoginState({\n      ...loginState,\n      [name]: value,\n    });\n  };\n\n  const [inputStates, setInputStates] = useState({\n    email: false,\n    password: false,\n    confirmPassword: false,\n    name: false,\n    id: false,\n  });\n  const clickJoin = async () => {\n    const body = {\n      email: loginState.email,\n      password: loginState.password,\n      name: loginState.name,\n      id: loginState.id,\n    };\n    try {\n      let result = await axios.post(\"/signup\", body);\n      navigate(\"/\");\n    } catch (e) {\n      alert(\"이메일 또는 아이디 중복\");\n    }\n  };\n  const onClick = (inputType) => {\n    switch (inputType) {\n      case \"email\":\n        setInputStates({\n          email: true,\n        });\n        break;\n      case \"password\":\n        setInputStates({\n          password: true,\n        });\n        break;\n      case \"confirmPassword\":\n        setInputStates({\n          confirmPassword: true,\n        });\n        break;\n      case \"name\":\n        setInputStates({\n          name: true,\n        });\n        break;\n      case \"id\":\n        setInputStates({\n          id: true,\n        });\n        break;\n      default:\n    }\n  };\n\n  return (\n    <SignupPanel>\n      <SingupLayout>\n        <h1>숭실대학교 Instagram</h1>\n        <p>회원가입 신청 후 초기화면으로 이동</p>\n        <InputForm inputStates={inputStates}>\n          <label className=\"email\" onClick={() => onClick(\"email\")}>\n            이메일주소\n            <input\n              type=\"email\"\n              name=\"email\"\n              onChange={onChange}\n              onBlur={() => {\n                setInputStates({ ...inputStates, email: false });\n              }}\n            />\n            {loginState.email && (\n              <p className={isValidEmail ? \"validEmail\" : \"invalidEmail\"}>\n                {isValidEmail ? \"이메일 양식 OK\" : \"이메일 양식에 맞춰주세요\"}\n              </p>\n            )}\n          </label>\n\n          <label className=\"id\" onClick={() => onClick(\"id\")}>\n            ID\n            <input\n              type=\"text\"\n              name=\"id\"\n              onChange={onChange}\n              onBlur={() => {\n                setInputStates({ ...inputStates, id: false });\n              }}\n            />\n          </label>\n\n          <label className=\"password\" onClick={() => onClick(\"password\")}>\n            비밀번호\n            <input\n              type=\"password\"\n              name=\"password\"\n              onChange={onChange}\n              onBlur={() => {\n                setInputStates({ ...inputStates, password: false });\n              }}\n            />\n          </label>\n\n          <label\n            className=\"confirmPassword\"\n            onClick={() => onClick(\"confirmPassword\")}\n          >\n            비밀번호 확인\n            <input\n              type=\"password\"\n              name=\"confirmPassword\"\n              onChange={onChange}\n              onBlur={() => {\n                setInputStates({ ...inputStates, confirmPassword: false });\n              }}\n            />\n            {loginState.confirmPassword && (\n              <p className={isValidPW ? \"validPW\" : \"invalidPW\"}>\n                {isValidPW ? \"✅비밀번호 일치\" : \"❌불일치\"}\n              </p>\n            )}\n          </label>\n\n          <label className=\"name\" onClick={() => onClick(\"name\")}>\n            이름\n            <input\n              type=\"text\"\n              name=\"name\"\n              onChange={onChange}\n              onBlur={() => {\n                setInputStates({ ...inputStates, name: false });\n              }}\n            />\n          </label>\n        </InputForm>\n        <LoginButton onClick={clickJoin}>회원가입</LoginButton>\n      </SingupLayout>\n    </SignupPanel>\n  );\n}\n\nexport default LoginSignup;\n","import React from \"react\";\nimport LoginSignup from \"../components/account/LoginSignup\";\n\nconst Signup = () => {\n  return (\n    <div>\n      <LoginSignup />\n    </div>\n  );\n};\n\nexport default Signup;\n","import styled from \"styled-components\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport React from \"react\";\nimport Cookies from \"js-cookie\";\nimport axios from \"axios\";\n\nconst HeaderPanel = styled.div`\n  width: 100%;\n  height: 15%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  background-color: gray;\n  Button {\n    width: 13%;\n    margin: 5px;\n  }\n`;\n\nfunction Header() {\n  const ClickLogout = async () => {\n    try {\n      Cookies.remove(\"user-id\");\n      await axios.post(\"./login/logout\");\n      navigate(\"/\");\n    } catch (e) {}\n  };\n\n  const navigate = useNavigate();\n  return (\n    <>\n      <HeaderPanel>\n        <Button\n          variant=\"primary\"\n          onClick={() => window.location.replace(\"/home\")}\n        >\n          Home\n        </Button>{\" \"}\n        <Button variant=\"secondary\" onClick={() => navigate(\"/new\")}>\n          New\n        </Button>{\" \"}\n        <Button variant=\"success\" onClick={() => navigate(\"/profile\")}>\n          Profile\n        </Button>{\" \"}\n        <Button variant=\"warning\" onClick={() => navigate(\"/follow\")}>\n          Follow\n        </Button>{\" \"}\n        <Button variant=\"danger\" onClick={() => navigate(\"/msg\")}>\n          Message\n        </Button>{\" \"}\n        <Button variant=\"info\" onClick={ClickLogout}>\n          Logout\n        </Button>{\" \"}\n      </HeaderPanel>\n    </>\n  );\n}\n\nexport default Header;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useNavigate } from \"react-router-dom\";\nimport leftImg from \"../../img/left.png\";\nimport rightImg from \"../../img/right.png\";\nimport axios from \"axios\";\n\nconst HashLayout = styled.div`\n  display: flex;\n  flex-direction: row;\n  a {\n  }\n`;\n\nconst CardWrapper = styled.div`\n  width: 300px;\n  display: flex;\n  background-color: #fff8f8;\n  margin: 25px;\n  flex-direction: column;\n  justify-content: center;\n  & > image {\n    width: 250px;\n    height: 250px;\n  }\n  .tag {\n    border: 0;\n    outline: 0;\n    background: none;\n    color: blue;\n  }\n  button {\n    margin-bottom: 30px;\n  }\n`;\nconst ImageSlide = styled.div`\n  width: 300px;\n  display: flex;\n  background-color: #fff8f8;\n  flex-direction: column;\n  align-items: center;\n  & > image {\n    width: 250px;\n    height: 250px;\n  }\n`;\n\nconst SlideBtnLayout = styled.div`\n  width: 100px;\n  height: 55px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  .slideBtn {\n    border-radius: 50%;\n    background-color: gray;\n    margin-top: 30px;\n    padding: 10px;\n    margin-right: 5px;\n    &:focus {\n      background-color: #00ff95;\n      box-shadow: 0px 0px 2px red;\n    }\n  }\n`;\n\nfunction Card({ number, images, author, date, text }) {\n  let hashtag = text.split(/(#[^\\s]+)/g);\n  const [imgArr, setImgArr] = useState([]);\n  const navigator = useNavigate();\n\n  useEffect(() => {\n    const tempImages = [];\n    (async () => {\n      for (let i in images[0]) {\n        if (!!images[0][i]) {\n          if (i !== \"number\") tempImages.push(images[0][i]);\n        }\n      }\n      setImgArr(tempImages);\n    })();\n  }, [number]);\n\n  const hashtagArr = hashtag.filter((str) => {\n    if (str !== \"\" && str !== \" \") {\n      return str.includes(\"#\");\n    }\n    return false;\n  });\n\n  const textArr = hashtag.filter((str) => {\n    if (str.includes(\"#\")) {\n      return false;\n    }\n    return true;\n  });\n  const contents = textArr.join(\"\");\n\n  const imgSlideClick = async (e) => {\n    const imgNum = e.target.value; //이미지 번호\n    let mainImg = document.getElementById(`mainImg${number}`);\n    mainImg.src = `http://localhost:8030/write/test?image=${\n      images[0][`img${Number(imgNum) + 1}`]\n    }`;\n  };\n\n  const authorClick = (author) => {\n    window.location.replace(`/home?text=${author}&type=id`);\n  };\n  const hashtagClick = (str) => {\n    let text = str.slice(1);\n    window.location.replace(`/home?text=${text}&type=hashtag`);\n    navigator(`/home?text=${text}&type=hashtag`);\n  };\n\n  const editClick = () => {\n    navigator(\"../edit\", {\n      state: {\n        number: number,\n        images: images,\n        id: author,\n        contents: text,\n      },\n    });\n  };\n\n  return (\n    <CardWrapper>\n      <ImageSlide>\n        <img\n          src={`http://localhost:8030/write/test?image=${images[0].img1}`}\n          alt=\"alt\"\n          id={`mainImg${number}`}\n          height=\"250px\"\n          width=\"250px\"\n        />\n        <SlideBtnLayout>\n          {imgArr.map((images, idx) => (\n            <button\n              className=\"slideBtn\"\n              value={idx}\n              onClick={imgSlideClick}\n            ></button>\n          ))}\n        </SlideBtnLayout>\n      </ImageSlide>\n\n      <button\n        className=\"tag\"\n        onClick={() => {\n          authorClick(author);\n        }}\n      >\n        글쓴이: {author}\n      </button>\n\n      <p>글내용: {contents}</p>\n      <HashLayout>\n        {hashtagArr.map((str) => (\n          <button\n            className=\"tag\"\n            onClick={() => {\n              hashtagClick(str);\n            }}\n          >\n            {str}\n          </button>\n        ))}\n      </HashLayout>\n\n      <p>작성시간: {date}</p>\n      <button onClick={editClick}>편집</button>\n    </CardWrapper>\n  );\n}\n\nexport default Card;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport {} from \"react-bootstrap\";\nimport Card from \"./Card\";\n\nconst GridLayout = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  place-items: center;\n`;\n\nfunction HomeContet({ cardList }) {\n  useEffect(() => {}, []);\n  return (\n    <div>\n      <GridLayout>\n        {cardList?.map((card, idx) => (\n          <Card\n            key={idx}\n            number={card.number}\n            author={card.id}\n            text={card.contents}\n            date={card.date}\n            images={card.images}\n            postInfo={card}\n          />\n        ))}\n      </GridLayout>\n    </div>\n  );\n}\n\nexport default HomeContet;\n","import { React, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useLocation } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport HomeContent from \"./HomeContet\";\nimport axios from \"axios\";\nimport { Pagination } from \"react-bootstrap\";\nimport QueryString from \"qs\";\n\nconst SearchCheck = styled.div`\n  width: 100%;\n  margin-top: 50px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  input {\n    height: 40px;\n    width: 200px;\n    border-radius: 3px;\n  }\n  button {\n    height: 40px;\n    border-radius: 3px;\n  }\n  div {\n    height: 40px;\n  }\n`;\nconst RadioButton = styled.div`\n  width: 100%;\n  height: 30px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  label {\n    padding: 5px;\n  }\n`;\nconst PaginationLayout = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nfunction Home() {\n  const [search, setSearch] = useState({\n    text: \"\",\n    type: \"\",\n  });\n  const [cardList, setCardList] = useState([]);\n  const [refreshPage, setRefreshPage] = useState(false);\n  const [page, setPage] = useState(0);\n  const [totalPage, setTotalPage] = useState(0);\n\n  const location = useLocation();\n  const query = QueryString.parse(location.search, {\n    ignoreQueryPrefix: true,\n    // 문자열 맨 앞의 ?를 생력\n  });\n\n  useEffect(() => {\n    query?.text || query?.type\n      ? filterSearch()\n      : (async () => {\n          //get total\n          let pageRes = await axios.get(\"write/totalPage\");\n          const total = pageRes.data;\n          setTotalPage(total);\n          //data fetch get post\n          const result = await axios.get(\"write/getPost\", {\n            params: { page: page },\n          });\n\n          //images\n          const image = await axios.get(\"write/getImage\", {\n            params: { page: page },\n          });\n\n          const imageResult = result.data?.map((item) => {\n            const images = image.data?.filter(\n              (img) => img.number === item.number\n            );\n            return {\n              ...item,\n              images,\n            };\n          });\n\n          setCardList(imageResult);\n        })();\n  }, [page, refreshPage]);\n\n  const onRadioClick = async (e) => {\n    setSearch({\n      ...search,\n      type: e.target.value,\n    });\n  };\n\n  const onSearchTextChange = (e) => {\n    setSearch({\n      ...search,\n      text: e.target.value,\n    });\n  };\n\n  const filterSearch = async () => {\n    let pageRes = await axios.get(\"write/filterPage\", {\n      params: {\n        type: query?.type || search.type,\n        text: query?.text || search.text,\n        page: page || 0,\n      },\n    });\n    const total = pageRes.data;\n\n    setTotalPage(total);\n\n    let postRes = await axios.get(\"write/filterGetPost\", {\n      params: {\n        type: query?.type || search.type,\n        text: query?.text || search.text,\n        page: page || 0,\n      },\n    });\n    const postInfo = postRes.data;\n\n    Promise.all(\n      postInfo.map(async (item) => {\n        const imageRes = await axios(\"write/getEachImages\", {\n          params: { number: item.number },\n        });\n        return {\n          ...item,\n          images: [imageRes.data],\n        };\n      })\n    ).then((item) => setCardList(item));\n    setRefreshPage(true);\n  };\n\n  const submitClick = () => {\n    window.location.replace(`/home?text=${search.text}&type=${search.type}`);\n  };\n\n  return (\n    <div>\n      <Header />\n      <SearchCheck>\n        <input placeholder=\"검색어\" type=\"text\" onChange={onSearchTextChange} />\n        <button type=\"submit\" onClick={submitClick}>\n          검색\n        </button>\n      </SearchCheck>\n      <RadioButton>\n        <label>\n          <input type=\"radio\" name=\"text\" value=\"id\" onClick={onRadioClick} />{\" \"}\n          작성자\n        </label>\n        <label>\n          <input type=\"radio\" name=\"text\" value=\"text\" onClick={onRadioClick} />{\" \"}\n          일반텍스트\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"text\"\n            value=\"hashtag\"\n            onClick={onRadioClick}\n          />{\" \"}\n          Hashtag\n        </label>\n      </RadioButton>\n      <HomeContent cardList={cardList} />\n      <PaginationLayout>\n        <Pagination>\n          {[...Array(totalPage).keys()].map((number) => (\n            <Pagination.Item\n              active={page === number}\n              onClick={() => setPage(number)}\n            >\n              {number + 1}\n            </Pagination.Item>\n          ))}\n        </Pagination>\n      </PaginationLayout>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport HomeComponent from \"../components/home/Home\";\nfunction Home() {\n  return (\n    <div>\n      <HomeComponent />\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport Cookies from \"js-cookie\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport Header from \"./home/Header\";\nimport axios from \"axios\";\n\nconst Layout = styled.div`\n  width: 100%;\n  margin-top: 50px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-size: large;\n  div {\n    margin: 20px;\n  }\n`;\nfunction Profile() {\n  const user_id = Cookies.get(\"user-id\");\n  const [follow_num, setFollowing_num] = useState({\n    following_id: 0,\n    followed_id: 0,\n  });\n\n  useEffect(() => {\n    (async () => {\n      (\"??\");\n      const following = await axios.get(\"follow/getFollowingNum\", {\n        params: { user_id: user_id },\n      });\n      const followed = await axios.get(\"follow/getFollowedNum\", {\n        params: { user_id: user_id },\n      });\n\n      setFollowing_num({\n        ...follow_num,\n        following_id: following.data,\n        followed_id: followed.data,\n      });\n    })();\n  }, []);\n\n  const nowTime = moment().format(\"YYYY-MM-DD HH:mm:ss\");\n  return (\n    <div>\n      <Header />\n      <Layout>\n        <div>사용자 id : {user_id}</div>\n        <div>현재시간 : {nowTime}</div>\n        <div>사용자가 팔로우하는 사람 수 : {follow_num?.following_id} </div>\n        <div>당신을 팔로우 해주는 사람 수 : {follow_num?.followed_id} </div>\n      </Layout>\n    </div>\n  );\n}\n\nexport default Profile;\n","import React from \"react\";\nimport ProfilePage from \"../components/Profile\";\nfunction Profile() {\n  return (\n    <div>\n      <ProfilePage />\n    </div>\n  );\n}\n\nexport default Profile;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport Cookies from \"js-cookie\";\nimport axios from \"axios\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { Empty } from \"antd\";\n\nconst PostPanel = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  font-size: 20px;\n  text-align: center;\n  align-items: center;\n\n  .content {\n    height: 500px;\n    width: 1000px;\n  }\n  div {\n    margin: 10px;\n  }\n  .exist {\n    border: none;\n    background-color: 0;\n    margin: 5px;\n  }\n`;\n\nfunction EditPost() {\n  const location = useLocation();\n  const id = location.state.id;\n  const [imageFilenames, setImage] = useState([]);\n  const navigate = useNavigate();\n  const images = [];\n  const num = location.state.number;\n  const [fileLength, setLength] = useState(0);\n  const [inputPost, setPost] = useState({\n    number: \"\",\n    id: \"\",\n    date: \"\",\n    contents: \"\",\n  });\n\n  useEffect(() => {\n    (async () => {\n      const temp = location.state.images;\n      for (let i in temp[0]) {\n        if (temp[0][i] !== null) {\n          if (i !== \"number\") images.push(temp[0][i]);\n        }\n        setImage(images);\n      }\n\n      setPost({\n        ...inputPost,\n        number: location.state.number,\n        id: location.state.id,\n        contents: location.state.contents,\n      });\n    })();\n  }, []);\n\n  const formData = new FormData();\n\n  const existFileClick = async (e) => {\n    let idx = e.target.id;\n    document.getElementById(idx).style.display = \"none\";\n    delete imageFilenames[idx];\n    let filtered = imageFilenames.filter(function (el) {\n      return el != null;\n    });\n    setImage(filtered);\n    setLength(filtered.length);\n  };\n  const handleChangeFile = async (e) => {\n    if (e.target.files.length > 5 - imageFilenames.length) {\n      alert(\"파일 최대 5개만 선택가능 다시 선택하세요.\");\n    } else {\n      for (let i = 0; i < 5; i++) {\n        formData.append(\"img\", e.target.files[i]);\n      }\n    }\n  };\n\n  const handleChangePost = (e) => {\n    let date = moment().format(\"YYYY-MM-DD HH:mm\");\n    setPost({\n      ...inputPost,\n      contents: e.target.value,\n      id: id,\n      date: date,\n    });\n  };\n\n  const subimtOnClick = async (e) => {\n    const config = {\n      header: { \"content-type\": \"multipart/form-data\" },\n    };\n    try {\n      let result2 = await axios.post(\"/write/updatePost\", inputPost);\n      formData.append(\"f1\", imageFilenames[0]);\n      formData.append(\"f2\", imageFilenames[1]);\n      formData.append(\"f3\", imageFilenames[2]);\n      formData.append(\"f4\", imageFilenames[3]);\n      formData.append(\"f5\", imageFilenames[4]);\n      formData.append(\"num\", num);\n      formData.append(\"fileLength\", imageFilenames.length);\n      // let result = await axios.post(\"/write/updateImages\", formData, config);\n      // console.log(result.data);\n    } catch (err) {\n      // alert(\"지원하지않는 파일존재\\n 다른 이미지 파일을 넣어주세요.\");\n      alert(err);\n    }\n    navigate(\"/home\");\n  };\n\n  const deleteOnClick = async () => {\n    try {\n      let result = await axios.post(\"/write/deletePost\", inputPost);\n      navigate(\"/home\");\n    } catch {}\n  };\n\n  return (\n    <PostPanel>\n      <input\n        className=\"content\"\n        placeholder=\"내용입력\"\n        type=\"email\"\n        value={inputPost.contents}\n        onChange={handleChangePost}\n      />\n      <input\n        type=\"file\"\n        className=\"file\"\n        id=\"file\"\n        name=\"img\"\n        onChange={handleChangeFile}\n        multiple=\"multiple\"\n      />\n      <div>\n        <div>존재하는 파일이름 클릭 시 삭제됨</div>\n        현재 존재하는파일\n        {imageFilenames.map((fname, idx) => (\n          <button\n            className=\"exist\"\n            key={fname}\n            id={idx}\n            onClick={existFileClick}\n          >\n            {fname}\n          </button>\n        ))}\n      </div>\n\n      <button type=\"submit\" onClick={subimtOnClick}>\n        수정\n      </button>\n      <button onClick={deleteOnClick}>게시물 삭제</button>\n    </PostPanel>\n  );\n}\n\nexport default EditPost;\n","import React from \"react\";\nimport EditPost from \"../components/post/EditPost\";\n\nfunction PostEdit() {\n  return (\n    <div>\n      <EditPost />\n    </div>\n  );\n}\n\nexport default PostEdit;\n","import React, { useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport Cookies from \"js-cookie\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst PostPanel = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  font-size: 20px;\n  text-align: center;\n  align-items: center;\n\n  .content {\n    height: 500px;\n    width: 1000px;\n  }\n`;\n\nfunction NewPost() {\n  const id = Cookies.get(\"user-id\");\n  const [image, setImage] = useState([]);\n  const navigate = useNavigate();\n  const [inputPost, setPost] = useState({\n    id: \"\",\n    date: \"\",\n    contents: \"\",\n  });\n\n  const formData = new FormData();\n\n  const handleChangeFile = async (e) => {\n    if (e.target.files.length > 5) {\n      alert(\"파일 최대 5개만 선택가능\");\n    } else {\n      for (let i = 0; i < 5; i++) {\n        formData.append(\"img\", e.target.files[i]);\n      }\n    }\n  };\n\n  const handleChangePost = (e) => {\n    let date = moment().format(\"YYYY-MM-DD HH:mm\");\n    setPost({\n      ...inputPost,\n      contents: e.target.value,\n      id: id,\n      date: date,\n    });\n  };\n\n  const subimtOnClick = async (e) => {\n    const config = {\n      header: { \"content-type\": \"multipart/form-data\" },\n    };\n    try {\n      let result = await axios.post(\"/write/uploadImages\", formData, config);\n      let result2 = await axios.post(\"/write/uploadPost\", inputPost);\n    } catch (err) {\n      alert(\"지원하지않는 파일존재\\n 다른 이미지 파일을 넣어주세요.\");\n    }\n    navigate(\"/Home\");\n  };\n\n  return (\n    <PostPanel>\n      <input\n        className=\"content\"\n        placeholder=\"내용입력\"\n        type=\"email\"\n        onChange={handleChangePost}\n      />\n      <input\n        type=\"file\"\n        className=\"file\"\n        id=\"file\"\n        name=\"img\"\n        onChange={handleChangeFile}\n        multiple=\"multiple\"\n      />\n      <button type=\"submit\" onClick={subimtOnClick}>\n        전송\n      </button>\n    </PostPanel>\n  );\n}\n\nexport default NewPost;\n","import React from \"react\";\nimport NewPost from \"../components/post/NewPost\";\nfunction PostNew() {\n  return (\n    <div>\n      <NewPost />\n    </div>\n  );\n}\n\nexport default PostNew;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Cookies from \"js-cookie\";\nimport axios from \"axios\";\n\nconst FollowWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  div {\n    margin: 20px;\n  }\n  button {\n    background-color: antiquewhite;\n  }\n`;\nfunction Follow({ followingUser }) {\n  const following_id = Cookies.get(\"user-id\");\n  const [isFollowing, setIsFollowing] = useState(followingUser?.following);\n  const [updateFollow, setUpdateFollow] = useState({\n    following_id: following_id,\n    followed_id: followingUser.id,\n    state: isFollowing,\n  });\n  useEffect(() => {\n    setUpdateFollow({\n      ...updateFollow,\n      state: isFollowing,\n    });\n  }, [isFollowing]);\n\n  const followButtonCilck = async () => {\n    if (isFollowing) {\n      setIsFollowing(false);\n      let result = await axios.post(\"/follow/update\", updateFollow);\n    } else {\n      setIsFollowing(true);\n      let result = await axios.post(\"/follow/update\", updateFollow);\n    }\n  };\n\n  return (\n    <FollowWrapper>\n      <div>아이디: {followingUser?.id}</div>\n      <button onClick={followButtonCilck}>\n        {isFollowing ? \"follow\" : \"unfollow\"}\n      </button>\n    </FollowWrapper>\n  );\n}\n\nexport default Follow;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport FollowContent from \"./FollowContent\";\nimport Header from \"../home/Header\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\n\nconst FollowWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\nfunction Follow() {\n  const [followingUserList, setFollowingUserList] = useState([]);\n  const user_id = Cookies.get(\"user-id\");\n  useEffect(() => {\n    (async () => {\n      const usersRes = await axios.get(\"follow/user\");\n      const user = usersRes.data;\n\n      const tableRes = await axios.get(\"follow/table\", {\n        params: { user_id: user_id },\n      });\n      const followList = tableRes.data;\n\n      const followingUserList = user.map((user) => {\n        let isFollowedUser = false;\n        followList.forEach((followUser) => {\n          if (followUser.followed_id === user.id) isFollowedUser = true;\n        });\n        return {\n          id: user.id,\n          following: isFollowedUser,\n        };\n      });\n      setFollowingUserList(followingUserList);\n    })();\n  }, []);\n\n  return (\n    <FollowWrapper>\n      <Header id=\"header\" />\n      {followingUserList?.map((followingUser) => (\n        <FollowContent followingUser={followingUser} />\n      ))}\n    </FollowWrapper>\n  );\n}\n\nexport default Follow;\n","import React from \"react\";\nimport Follow from \"../components/follow/Follow\";\n\nfunction FollowPage() {\n  return (\n    <div>\n      <Follow />\n    </div>\n  );\n}\n\nexport default FollowPage;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Cookies from \"js-cookie\";\nimport axios from \"axios\";\nfunction Message() {\n  const user_id = Cookies.get(\"user-id\");\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    (async () => {\n      let followRes = axios.get(\"follow/table\", {\n        params: {\n          user_id: user_id,\n        },\n      });\n    })();\n  }, []);\n\n  return <div></div>;\n}\n\nexport default Message;\n","import React from \"react\";\nimport Message from \"../components/Message\";\n\nconst MessagePage = () => {\n  return (\n    <div>\n      <Message />\n    </div>\n  );\n};\n\nexport default MessagePage;\n","import React from \"react\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport \"./App.css\";\nimport {\n  Main,\n  Account,\n  Home,\n  Profile,\n  PostNew,\n  PostEdit,\n  FollowPage,\n  MessagePage,\n} from \"./pages/index\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nfunction App() {\n  return (\n    <div>\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<Main />} />\n          <Route path=\"/account\" element={<Account />} />\n          <Route path=\"/home\" element={<Home />} />\n          <Route path=\"/profile\" element={<Profile />} />\n          <Route path=\"/new\" element={<PostNew />} />\n          <Route path=\"/edit\" element={<PostEdit />} />\n          <Route path=\"/follow\" element={<FollowPage />} />\n          <Route path=\"/msg\" element={<MessagePage />} />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals())\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}