{
  "version": 3,
  "sources": [
    "img/instagram.jpeg",
    "components/main/MainPanel.js",
    "Color/Color.js",
    "components/main/LoginInput.js",
    "pages/Main.js",
    "components/account/LoginSignup.js",
    "pages/Account.js",
    "App.js",
    "reportWebVitals.js",
    "index.js"
  ],
  "names": [
    "Panel",
    "styled",
    "div",
    "MainPanel",
    "src",
    "mainImage",
    "alt",
    "PointColor",
    "LoginPanel",
    "LoginInputPanel",
    "SignupButton",
    "button",
    "LoginButton",
    "InputForm",
    "props",
    "emailState",
    "passwordState",
    "LoginInput",
    "useState",
    "setEmailState",
    "setPasswordState",
    "emailRef",
    "useRef",
    "passwordRef",
    "navigate",
    "useNavigate",
    "email",
    "password",
    "form",
    "setForm",
    "onChangeFormData",
    "e",
    "target",
    "value",
    "type",
    "callLogin",
    "a",
    "axios",
    "get",
    "result",
    "console",
    "log",
    "data",
    "onClick",
    "inputType",
    "current",
    "focus",
    "className",
    "name",
    "onChange",
    "ref",
    "Main",
    "SignupPanel",
    "SingupLayout",
    "inputStates",
    "confirmPassword",
    "userName",
    "id",
    "LoginSignup",
    "isValidPW",
    "setIsValidPW",
    "isValidEmail",
    "setIsValidEmail",
    "loginState",
    "setLoginState",
    "useEffect",
    "test",
    "year",
    "setInputStates",
    "onBlur",
    "Signup",
    "App",
    "path",
    "element",
    "Account",
    "reportWebVitals",
    "onPerfEntry",
    "Function",
    "then",
    "getCLS",
    "getFID",
    "getFCP",
    "getLCP",
    "getTTFB",
    "ReactDOM",
    "render",
    "StrictMode",
    "document",
    "getElementById"
  ],
  "mappings": "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",
  "file": "static/js/main.843db07b.chunk.js",
  "sourcesContent": [
    "export default __webpack_public_path__ + \"static/media/instagram.56e41213.jpeg\";",
    "import React from \"react\";\nimport styled from \"styled-components\";\nimport mainImage from \"../../img/instagram.jpeg\";\nconst Panel = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  font-size: 20px;\n  text-align: center;\n  align-items: center;\n`;\nfunction MainPanel() {\n  return (\n    <Panel>\n      <img src={mainImage} alt=\"mainImage\" />\n      숭실대학교 인스타그램\n    </Panel>\n  );\n}\n\nexport default MainPanel;\n",
    "export const PrimaryColor = \"#2BA8E0\"; //main color\nexport const PrimaryColor2 = \"#96D1EC\";\nexport const PrimaryColor3 = \"#C0DAE5\";\n\nexport const PointColor = \"#FFC46B\"; //emphasis color\nexport const PointColor2 = \"#FFD9A0\";\n\nexport const BlackColor = \"#18191F\"; //default color\nexport const lightBlackColor = \"#474A57\";\nexport const grayColor = \"#969BAB\";\nexport const lightgrayColor1 = \"#D9DBE1\";\nexport const lightgrayColor2 = \"#EEEFF4\";\nexport const lightgrayColor3 = \"#F4F5F7\";\nexport const lightgrayColor4 = \"#F2F2F2\";\nexport const lightgrayColor5 = \"#FAFAFA\";\n// 유사한 색깔 컬러는 번호로 설정 1->3 순으로  밝은순\n\nexport const whiteColor = \"#fff\";\n",
    "import React, { useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { PointColor, PrimaryColor } from \"../../Color/Color\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n// 대문자\n\nconst LoginPanel = styled.div`\n  width: 100%;\n  display: flex;\n  padding-top: 100px;\n  padding-bottom: 80px;\n  align-items: center;\n  flex-direction: column;\n  @media screen and (max-width: 1145px) {\n    height: 559px;\n  }\n`;\n\nconst LoginInputPanel = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 70px;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-family: \"YonnGodic340\";\n\n  @media screen and (max-width: 1145px) {\n    width: 100vw;\n  }\n`;\n\nconst SignupButton = styled.button`\n  margin-top: 10px;\n  padding: 10px;\n  width: 400px;\n  background-color: ${PointColor};\n  font-family: \"YonnGodic340\";\n  color: white;\n  border-radius: 3px;\n  border: 1px solid ${PointColor};\n\n  @media screen and (max-width: 1145px) {\n    width: 100%;\n  }\n`;\n\nconst LoginButton = styled.button`\n  margin-top: 10px;\n  padding: 10px;\n  width: 400px;\n  background-color: ${PointColor};\n  font-family: \"YonnGodic340\";\n  color: white;\n  border-radius: 3px;\n  border: 1px solid ${PointColor};\n\n  @media screen and (max-width: 1145px) {\n    width: 100%;\n  }\n`;\n\nconst InputForm = styled.div`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  input {\n    outline: none;\n    border: none;\n  }\n  .email {\n    margin-top: 1px;\n    padding-bottom: 10px;\n    padding-left: 10px;\n    font-size: 13px;\n    display: flex;\n    flex-direction: column;\n    border: 1px solid black;\n    border-left: ${(props) =>\n      props.emailState ? \"3px solid\" + PrimaryColor : \"1px solid black\"};\n    color: gray;\n  }\n  .password {\n    margin-top: 1px;\n    padding-bottom: 10px;\n    padding-left: 10px;\n    font-size: 13px;\n    display: flex;\n    flex-direction: column;\n    border: 1px solid black;\n    border-left: ${(props) =>\n      props.passwordState ? \"3px solid\" + PrimaryColor : \" 1px solid black\"};\n    color: gray;\n  }\n\n  @media screen and (max-width: 1145px) {\n    width: 100%;\n  }\n`;\nfunction LoginInput() {\n  const [emailState, setEmailState] = useState(false);\n  const [passwordState, setPasswordState] = useState(false);\n  const emailRef = useRef(null);\n  const passwordRef = useRef(null);\n\n  const navigate = useNavigate();\n\n  const [form, setForm] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const onChangeFormData = (e) => {\n    const { value, type } = e.target;\n    setForm({\n      ...form,\n      [type]: value,\n    });\n  };\n\n  const callLogin = async (e) => {\n    const result = await axios.get(\"/test\");\n    (result.data);\n    // e.preventDefault();\n    // api.Logoin(dispatch, form.email, form.password).then((data) => {\n    //   if (data.statusCode === 200) {\n    //     history.push(\"/\");\n    //   }\n    // });\n  };\n\n  const callSignUpPage = (e) => {\n    navigate(\"/account\");\n  };\n\n  const onClick = (inputType) => {\n    if (inputType === \"email\") {\n      emailRef.current.focus();\n      setEmailState(true);\n      setPasswordState(false);\n    } else if (inputType === \"password\") {\n      passwordRef.current.focus();\n      setEmailState(false);\n      setPasswordState(true);\n    }\n  };\n  return (\n    <LoginPanel>\n      <LoginInputPanel>\n        <InputForm emailState={emailState} passwordState={passwordState}>\n          <div className=\"email\" onClick={() => onClick(\"email\")}>\n            이메일주소\n            <input\n              type=\"email\"\n              name=\"email\"\n              onChange={onChangeFormData}\n              ref={emailRef}\n            />\n          </div>\n          <div className=\"password\" onClick={() => onClick(\"password\")}>\n            비밀번호\n            <input\n              type=\"password\"\n              name=\"password\"\n              onChange={onChangeFormData}\n              ref={passwordRef}\n            />\n          </div>\n        </InputForm>\n\n        <LoginButton onClick={callLogin}>로그인</LoginButton>\n        <SignupButton onClick={callSignUpPage}>사용자 등록</SignupButton>\n      </LoginInputPanel>\n    </LoginPanel>\n  );\n}\n\nexport default LoginInput;\n",
    "import React from \"react\";\nimport MainPanel from \"../components/main/MainPanel\";\nimport LoginInput from \"../components/main/LoginInput\";\nconst Main = () => {\n  return (\n    <div>\n      <MainPanel />\n      <LoginInput />\n    </div>\n  );\n};\n\nexport default Main;\n",
    "import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useNavigate } from \"react-router-dom\";\nimport { PointColor, PrimaryColor } from \"../../Color/Color\";\n// import { userApi } from \"../../api/index.js\";\n\nconst SignupPanel = styled.div`\n  background-size: 100% 100%;\n  background-repeat: no-repeat;\n\n  @media screen and (max-width: 1024px) {\n    width: 100%;\n  }\n`;\n\nconst SingupLayout = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-top: 20px;\n  margin-bottom: 50px;\n  h1 {\n    padding-top: 30px;\n    font-size: 30px;\n    line-height: 0;\n  }\n  p {\n    font-size: 15px;\n    line-height: 20px;\n    color: gray;\n  }\n\n  @media screen and (max-width: 1024px) {\n    width: 100%;\n  }\n\n  @media screen and (max-width: 480px) {\n    h1 {\n      padding-top: 30px;\n      font-size: 45px;\n      line-height: 0;\n    }\n    p {\n      font-size: 13px;\n      line-height: 20px;\n      color: gray;\n    }\n  }\n\n  @media screen and (max-width: 400px) {\n    p {\n      font-size: 10px;\n      line-height: 20px;\n      color: gray;\n    }\n  }\n`;\n\nconst LoginButton = styled.button`\n  margin-top: 30px;\n  padding: 10px;\n  width: 554px;\n  background-color: ${PointColor};\n  color: white;\n  border-radius: 3px;\n  border: 1px solid ${PointColor};\n\n  @media screen and (max-width: 1024px) {\n    width: 80%;\n  }\n`;\n\nconst InputForm = styled.div`\n  width: 554px;\n  display: flex;\n  background: white;\n  flex-direction: column;\n  input {\n    outline: gray;\n    border: none;\n    background: none;\n  }\n  label {\n    line-height: 300%;\n  }\n  .invalidEmail {\n    color: red;\n    font-size: 8px;\n    line-height: 0;\n  }\n  .validEmail {\n    color: green;\n    font-size: 8px;\n    line-height: 0;\n  }\n  .validEmail {\n    color: green;\n    font-size: 8px;\n    line-height: 0;\n  }\n  .invalidPW {\n    color: red;\n    font-size: 8px;\n    line-height: 0;\n  }\n  .validPW {\n    color: green;\n    font-size: 8px;\n    line-height: 0;\n  }\n  .email {\n    margin-top: 1px;\n    padding-bottom: 18px;\n    padding-left: 10px;\n    font-size: 13px;\n    display: flex;\n    flex-direction: column;\n    border: 1px solid gray;\n    border-left: ${(props) =>\n      props.inputStates.email ? \"3px solid\" + PrimaryColor : \"1px solid gray\"};\n    color: gray;\n  }\n  .password {\n    padding-bottom: 18px;\n    padding-left: 10px;\n    font-size: 13px;\n    display: flex;\n    flex-direction: column;\n    border: 1px solid gray;\n    border-left: ${(props) =>\n      props.inputStates.password\n        ? \"3px solid\" + PrimaryColor\n        : \" 1px solid gray\"};\n    color: gray;\n  }\n  .confirmPassword {\n    padding-bottom: 18px;\n    padding-left: 10px;\n    font-size: 13px;\n    display: flex;\n    flex-direction: column;\n    border: 1px solid gray;\n    border-left: ${(props) =>\n      props.inputStates.confirmPassword\n        ? \"3px solid\" + PrimaryColor\n        : \"1px solid gray\"};\n    color: gray;\n  }\n  .userName {\n    padding-bottom: 18px;\n    padding-left: 10px;\n    font-size: 13px;\n    display: flex;\n    flex-direction: column;\n    border: 1px solid gray;\n    border-left: ${(props) =>\n      props.inputStates.userName\n        ? \"3px solid\" + PrimaryColor\n        : \"1px solid gray\"};\n    color: gray;\n  }\n  .id {\n    padding-bottom: 18px;\n    padding-left: 10px;\n    font-size: 13px;\n    display: flex;\n    flex-direction: column;\n    border: 1px solid gray;\n    border-left: ${(props) =>\n      props.inputStates.id ? \"3px solid\" + PrimaryColor : \"1px solid gray\"};\n    color: gray;\n  }\n\n  @media screen and (max-width: 1024px) {\n    width: 80%;\n  }\n`;\n\nfunction LoginSignup() {\n  const [isValidPW, setIsValidPW] = useState(false);\n  const [isValidEmail, setIsValidEmail] = useState(false);\n  const navigate = useNavigate();\n  const [loginState, setLoginState] = useState({\n    email: \"\",\n    password: \"\",\n    userName: \"\",\n    id: \"\",\n  });\n\n  useEffect(() => {\n    let emailRule =\n      /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\n    //이메일 정규표현식\n    if (emailRule.test(loginState.email)) {\n      setIsValidEmail(true);\n    } else {\n      setIsValidEmail(false);\n    }\n\n    if (loginState.confirmPassword === loginState.password) {\n      setIsValidPW(true);\n    } else {\n      setIsValidPW(false);\n    }\n  }, [\n    loginState.password,\n    loginState.confirmPassword,\n    loginState.email,\n    loginState.year,\n  ]);\n\n  const onChange = (e) => {\n    const { value, name } = e.target;\n    setLoginState({\n      ...loginState,\n      [name]: value,\n    });\n  };\n\n  const [inputStates, setInputStates] = useState({\n    email: false,\n    password: false,\n    confirmPassword: false,\n    userName: false,\n    id: false,\n  });\n\n  const clickJoin = () => {\n    // userApi.Signup(loginState).then(() => {\n    //   navigate(\"/\");\n    // });\n    navigate(\"/\");\n  };\n  const onClick = (inputType) => {\n    switch (inputType) {\n      case \"email\":\n        setInputStates({\n          email: true,\n        });\n        break;\n      case \"password\":\n        setInputStates({\n          password: true,\n        });\n        break;\n      case \"confirmPassword\":\n        setInputStates({\n          confirmPassword: true,\n        });\n        break;\n      case \"userName\":\n        setInputStates({\n          userName: true,\n        });\n        break;\n      case \"id\":\n        setInputStates({\n          id: true,\n        });\n        break;\n      default:\n    }\n  };\n\n  return (\n    <SignupPanel>\n      <SingupLayout>\n        <h1>숭실대학교 Instagram</h1>\n        <p>회원가입 신청 후 초기화면으로 이동</p>\n        <InputForm inputStates={inputStates}>\n          <label className=\"email\" onClick={() => onClick(\"email\")}>\n            이메일주소\n            <input\n              type=\"email\"\n              name=\"email\"\n              onChange={onChange}\n              onBlur={() => {\n                setInputStates({ ...inputStates, email: false });\n              }}\n            />\n            {loginState.email && (\n              <p className={isValidEmail ? \"validEmail\" : \"invalidEmail\"}>\n                {isValidEmail ? \"이메일 양식 OK\" : \"이메일 양식에 맞춰주세요\"}\n              </p>\n            )}\n          </label>\n\n          <label className=\"id\" onClick={() => onClick(\"id\")}>\n            ID\n            <input\n              type=\"text\"\n              name=\"id\"\n              onChange={onChange}\n              onBlur={() => {\n                setInputStates({ ...inputStates, id: false });\n              }}\n            />\n          </label>\n\n          <label className=\"password\" onClick={() => onClick(\"password\")}>\n            비밀번호\n            <input\n              type=\"password\"\n              name=\"password\"\n              onChange={onChange}\n              onBlur={() => {\n                setInputStates({ ...inputStates, password: false });\n              }}\n            />\n          </label>\n\n          <label\n            className=\"confirmPassword\"\n            onClick={() => onClick(\"confirmPassword\")}\n          >\n            비밀번호 확인\n            <input\n              type=\"password\"\n              name=\"confirmPassword\"\n              onChange={onChange}\n              onBlur={() => {\n                setInputStates({ ...inputStates, confirmPassword: false });\n              }}\n            />\n            {loginState.confirmPassword && (\n              <p className={isValidPW ? \"validPW\" : \"invalidPW\"}>\n                {isValidPW ? \"✅비밀번호 일치\" : \"❌불일치\"}\n              </p>\n            )}\n          </label>\n\n          <label className=\"userName\" onClick={() => onClick(\"userName\")}>\n            이름\n            <input\n              type=\"text\"\n              name=\"userName\"\n              onChange={onChange}\n              onBlur={() => {\n                setInputStates({ ...inputStates, userName: false });\n              }}\n            />\n          </label>\n        </InputForm>\n        <LoginButton onClick={clickJoin}>회원가입</LoginButton>\n      </SingupLayout>\n    </SignupPanel>\n  );\n}\n\nexport default LoginSignup;\n",
    "import React from \"react\";\nimport LoginSignup from \"../components/account/LoginSignup\";\n\nconst Signup = () => {\n  return (\n    <div>\n      <LoginSignup />\n    </div>\n  );\n};\n\nexport default Signup;\n",
    "import React from \"react\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport \"./App.css\";\nimport { Main, Account } from \"./pages/index\";\n\nfunction App() {\n  return (\n    <div>\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<Main />} />\n          <Route path=\"/account\" element={<Account />} />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\nexport default App;\n",
    "const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n",
    "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals())\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"
  ],
  "sourceRoot": ""
}
